{
  "openapi": "3.0.2",
  "info": {
    "version": "1.32.3",
    "title": "Sencrop API",
    "description": "API to consume Sencrop data"
  },
  "servers": [
    "https://api.sencrop.com/v1"
  ],
  "components": {
    "securitySchemes": {
      "maybeBearerAuth": {
        "description": "Optional bearer authentication with a user API token",
        "type": "http",
        "scheme": "bearer"
      },
      "bearerAuth": {
        "description": "Bearer authentication with a user API token",
        "type": "http",
        "scheme": "bearer"
      },
      "onceAuth": {
        "description": "Bearer like authentication but doable only once (prefix is Once instead of Bearer",
        "type": "apiKey",
        "in": "header",
        "name": "authorization"
      },
      "accessTokenAuth": {
        "description": "Alternative to Bearer authentication through query parameters.",
        "type": "apiKey",
        "in": "query",
        "name": "access_token"
      },
      "basicAuth": {
        "description": "Basic authentication with APPLICATION_ID/APPLICATION_SECRET credentials",
        "type": "http",
        "scheme": "basic"
      },
      "sencropOAuth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "/master/oauth2/authorize",
            "tokenUrl": "/master/oauth2/token",
            "refreshUrl": "/master/oauth2/token",
            "scopes": {
              "user": "Access to the user account"
            }
          },
          "implicit": {
            "authorizationUrl": "/master/oauth2/authorize",
            "scopes": {
              "user": "Access to the user account"
            }
          },
          "password": {
            "tokenUrl": "/master/oauth2/token",
            "scopes": {
              "user": "Access to the user account",
              "partner": "Partner access to user's devices"
            }
          },
          "clientCredentials": {
            "tokenUrl": "/master/oauth2/token",
            "scopes": {
              "partner": "Partner access to user's devices"
            }
          }
        }
      },
      "fakeAuth": {
        "description": "A fake authentication for development purpose.",
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    },
    "schemas": {
      "CropContents": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "Crop": {
        "type": "object",
        "required": [
          "contents"
        ],
        "properties": {
          "id": {
            "type": "number",
            "pattern": "^[0-9]+$"
          },
          "hits": {
            "type": "number"
          },
          "contents": {
            "$ref": "#/components/schemas/CropContents"
          }
        }
      },
      "CropHash": {
        "type": "object",
        "patternProperties": {
          "^[0-9]+$": {
            "$ref": "#/components/schemas/Crop"
          }
        }
      },
      "CropItem": {
        "type": "object",
        "required": [
          "item",
          "crops"
        ],
        "properties": {
          "item": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          },
          "entry": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1,
            "description": "Deprecated, use the `item` property instead."
          },
          "crops": {
            "$ref": "#/components/schemas/CropHash"
          }
        }
      },
      "CropsItems": {
        "type": "object",
        "required": [
          "items",
          "crops"
        ],
        "properties": {
          "crops": {
            "$ref": "#/components/schemas/CropHash"
          },
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "number",
              "pattern": "^[0-9]+$"
            }
          }
        }
      },
      "OrganisationContents": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "locale",
          "timeZone",
          "type"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "locale": {
            "type": "string",
            "pattern": "^[a-z]{2}(-[A-Z]{2,3})?$",
            "maxLength": 5
          },
          "timeZone": {
            "type": "string",
            "pattern": "^[a-zA-Z]+/[a-zA-Z]+$",
            "maxLength": 50
          },
          "identification": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "farm",
              "cooperative",
              "interest_group",
              "chamber_of_agriculture",
              "company",
              "personal",
              "public_agency"
            ]
          },
          "typeFarm": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "agricultural",
                "wine",
                "arboreal",
                "vegetable",
                "apiarian"
              ]
            }
          },
          "area": {
            "type": "number"
          },
          "crops": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "irrigation": {
            "type": "boolean"
          }
        }
      },
      "Organisation": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "contents"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "ownersIds": {
            "type": "array",
            "items": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            },
            "minItems": 1,
            "uniqueItems": true
          },
          "contents": {
            "$ref": "#/components/schemas/OrganisationContents"
          }
        }
      },
      "OrganisationItem": {
        "type": "object",
        "required": [
          "item",
          "organisations"
        ],
        "properties": {
          "item": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          },
          "organisations": {
            "$ref": "#/components/schemas/OrganisationHash"
          }
        }
      },
      "OrganisationHash": {
        "type": "object",
        "patternProperties": {
          "undefined": {
            "$ref": "#/components/schemas/Organisation"
          }
        }
      },
      "OrganisationItems": {
        "type": "object",
        "required": [
          "items",
          "organisations"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "number",
              "pattern": "^[0-9]+$"
            }
          },
          "organisations": {
            "$ref": "#/components/schemas/OrganisationHash"
          }
        }
      },
      "ModuleContents": {
        "type": "object",
        "required": [
          "name",
          "code",
          "type"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "email",
              "ftp",
              "partner",
              "s3"
            ]
          }
        }
      },
      "Module": {
        "type": "object",
        "required": [
          "contents"
        ],
        "properties": {
          "id": {
            "type": "number",
            "pattern": "^[0-9]+$"
          },
          "organisationId": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          },
          "contents": {
            "$ref": "#/components/schemas/ModuleContents"
          }
        }
      },
      "ModuleHash": {
        "type": "object",
        "patternProperties": {
          "^[0-9]+$": {
            "$ref": "#/components/schemas/Module"
          }
        }
      },
      "ModuleItem": {
        "type": "object",
        "required": [
          "item",
          "modules"
        ],
        "properties": {
          "item": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          },
          "entry": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1,
            "description": "Deprecated, use the `item` property instead."
          },
          "modules": {
            "$ref": "#/components/schemas/ModuleHash"
          },
          "organisations": {
            "$ref": "#/components/schemas/OrganisationHash"
          }
        }
      },
      "ModuleItems": {
        "type": "object",
        "required": [
          "items",
          "modules"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            },
            "minItems": 0,
            "uniqueItems": true
          },
          "modules": {
            "$ref": "#/components/schemas/ModuleHash"
          }
        }
      },
      "ModelContents": {
        "type": "object",
        "required": [
          "name",
          "conception",
          "manufacturing",
          "calibration",
          "weight"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "externalDiameter": {
            "type": "number"
          },
          "conception": {
            "type": "string"
          },
          "manufacturing": {
            "type": "string"
          },
          "calibration": {
            "type": "string"
          },
          "height": {
            "type": "number"
          },
          "weight": {
            "type": "number"
          }
        }
      },
      "Model": {
        "type": "object",
        "required": [
          "contents"
        ],
        "properties": {
          "id": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          },
          "contents": {
            "$ref": "#/components/schemas/ModelContents"
          }
        }
      },
      "ModelHash": {
        "type": "object",
        "patternProperties": {
          "^[0-9]+$": {
            "$ref": "#/components/schemas/Model"
          }
        }
      },
      "DeviceStatusContents": {
        "type": "object",
        "required": [
          "firmware",
          "battery",
          "signal",
          "latitude",
          "longitude",
          "altitude",
          "locationSatellites",
          "locationPrecision",
          "lastLocationDate",
          "lastLocationFailureDate",
          "lastMoveDate",
          "lastRebootDate",
          "lastStatusUpdateDate"
        ],
        "properties": {
          "firmware": {
            "type": "string"
          },
          "battery": {
            "type": "number"
          },
          "signal": {
            "type": "number"
          },
          "latitude": {
            "minimum": -90,
            "maximum": 90,
            "type": "number"
          },
          "longitude": {
            "minimum": -180,
            "maximum": 180,
            "type": "number"
          },
          "altitude": {
            "type": "number"
          },
          "locationSatellites": {
            "type": "number"
          },
          "locationPrecision": {
            "type": "number"
          },
          "lastLocationDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastLocationFailureDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastRebootDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastMoveDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastStatusUpdateDate": {
            "type": "string",
            "format": "date-time"
          },
          "activeDate": {
            "type": "string",
            "format": "date-time"
          },
          "manufacturedDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DeviceStatus": {
        "type": "object",
        "required": [
          "contents"
        ],
        "properties": {
          "id": {
            "type": "number",
            "pattern": "^[0-9]+$"
          },
          "measuresCount": {
            "type": "number"
          },
          "contents": {
            "$ref": "#/components/schemas/DeviceStatusContents"
          }
        }
      },
      "DeviceStatusHash": {
        "type": "object",
        "patternProperties": {
          "^[0-9]+$": {
            "$ref": "#/components/schemas/DeviceStatus"
          }
        }
      },
      "DeviceSummary": {
        "type": "object",
        "patternProperties": {
          "^(RELATIVE_HUMIDITY|TEMPERATURE|WET_TEMPERATURE|RAIN_FALL|WIND_SPEED|WIND_GUST|WIND_DIRECTION|MOVE|LEAF_SENSOR_CONDUCTIVITY|RH_AIR_H1|TEMP_AIR_H1|RAIN_TIC|WIND_MEAN|WIND_MAX)$": {
            "type": "object",
            "required": [
              "lastMeasure"
            ],
            "properties": {
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "lastMeasure": {
                "type": "number"
              },
              "lastHour": {
                "type": "number"
              },
              "last3Hours": {
                "type": "number"
              },
              "lastDay": {
                "type": "number"
              },
              "lastWeek": {
                "type": "number"
              }
            }
          }
        }
      },
      "DeviceSummaryHash": {
        "type": "object",
        "patternProperties": {
          "^[0-9]+$": {
            "$ref": "#/components/schemas/DeviceSummary"
          }
        }
      },
      "DeviceSummaryItem": {
        "type": "object",
        "required": [
          "item",
          "models",
          "devices",
          "devicesSummaries"
        ],
        "properties": {
          "models": {
            "$ref": "#/components/schemas/ModelHash"
          },
          "devices": {
            "$ref": "#/components/schemas/DeviceHash"
          },
          "devicesSummaries": {
            "$ref": "#/components/schemas/DeviceSummaryHash"
          },
          "item": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          }
        }
      },
      "DeviceContents": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "Device": {
        "type": "object",
        "required": [
          "contents"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "contents": {
            "$ref": "#/components/schemas/DeviceContents"
          },
          "accessPeriods": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "deviceId",
                "userId",
                "type",
                "startDate",
                "endDate"
              ],
              "properties": {
                "deviceId": {
                  "type": "number",
                  "pattern": "^[0-9]+$",
                  "minimum": 1
                },
                "userId": {
                  "type": "number",
                  "pattern": "^[0-9]+$",
                  "minimum": 1
                },
                "moduleId": {
                  "type": "number",
                  "pattern": "^[0-9]+$",
                  "minimum": 1
                },
                "delegatorId": {
                  "type": "number",
                  "pattern": "^[0-9]+$",
                  "minimum": 1
                },
                "parameters": {
                  "type": "object",
                  "additionalProperties": true
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "owner",
                    "user",
                    "guest",
                    "collaborator",
                    "partner"
                  ]
                },
                "situation": {
                  "type": "string",
                  "enum": [
                    "UNKNOWN",
                    "GREENHOUSE",
                    "OUTDOOR_COVERED",
                    "OUTDOOR_INFLUENCED",
                    "OUTDOOR_ISOLATED"
                  ]
                },
                "startDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "endDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "deletionDate": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "identification": {
            "type": "string",
            "pattern": "^(WCP?|RC|SC|UMO|LC)[0-9]{6}$"
          },
          "calibrations": {
            "type": "object",
            "patternProperties": {
              "^(RELATIVE_HUMIDITY|TEMPERATURE|WET_TEMPERATURE|RAIN_FALL|WIND_SPEED|WIND_GUST|WIND_DIRECTION|MOVE|LEAF_SENSOR_CONDUCTIVITY|RH_AIR_H1|TEMP_AIR_H1|RAIN_TIC|WIND_MEAN|WIND_MAX)$": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "lastMeasure"
                  ],
                  "properties": {
                    "startDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "ratio": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "serial": {
            "type": "string",
            "pattern": "^[A-Z0-9]+$"
          },
          "modelId": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          },
          "userId": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          },
          "organisationId": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          }
        }
      },
      "DeviceHash": {
        "type": "object",
        "patternProperties": {
          "undefined": {
            "$ref": "#/components/schemas/Device"
          }
        }
      },
      "DeviceItem": {
        "type": "object",
        "required": [
          "item",
          "models",
          "devices",
          "devicesStatuses"
        ],
        "properties": {
          "item": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          },
          "models": {
            "$ref": "#/components/schemas/ModelHash"
          },
          "devicesStatuses": {
            "$ref": "#/components/schemas/DeviceStatusHash"
          },
          "devices": {
            "$ref": "#/components/schemas/DeviceHash"
          }
        }
      },
      "DevicesItems": {
        "type": "object",
        "required": [
          "items",
          "models",
          "devices",
          "devicesStatuses",
          "devicesSummaries"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            },
            "minItems": 0,
            "uniqueItems": true
          },
          "total": {
            "type": "number",
            "minimum": 0
          },
          "models": {
            "$ref": "#/components/schemas/ModelHash"
          },
          "devicesStatuses": {
            "$ref": "#/components/schemas/DeviceStatusHash"
          },
          "devicesSummaries": {
            "$ref": "#/components/schemas/DeviceSummaryHash"
          },
          "devices": {
            "$ref": "#/components/schemas/DeviceHash"
          }
        }
      },
      "DeviceForecasts": {
        "type": "object",
        "required": [
          "item",
          "models",
          "devices",
          "forecasts"
        ],
        "properties": {
          "models": {
            "$ref": "#/components/schemas/ModelHash"
          },
          "devices": {
            "$ref": "#/components/schemas/DeviceHash"
          },
          "item": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          },
          "forecasts": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "PartnerDevicesItems": {
        "type": "object",
        "required": [
          "items",
          "models",
          "devices",
          "devicesStatuses",
          "organisations",
          "users"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            },
            "minItems": 0,
            "uniqueItems": true
          },
          "total": {
            "type": "number",
            "minimum": 0
          },
          "models": {
            "$ref": "#/components/schemas/ModelHash"
          },
          "devicesStatuses": {
            "$ref": "#/components/schemas/DeviceStatusHash"
          },
          "devices": {
            "$ref": "#/components/schemas/DeviceHash"
          },
          "users": {
            "$ref": "#/components/schemas/UserHash"
          },
          "organisations": {
            "$ref": "#/components/schemas/OrganisationHash"
          }
        }
      },
      "ApplicationContents": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "description",
          "isActive",
          "scopes",
          "grantTypes",
          "callbackURL"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "scopes": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string"
            }
          },
          "grantTypes": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string"
            }
          },
          "callbackURL": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "Application": {
        "type": "object",
        "required": [
          "contents"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          },
          "userId": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          },
          "organisationId": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          },
          "truncatedSecret": {
            "type": "string",
            "description": "The API secret of the application truncated."
          },
          "secret": {
            "type": "string",
            "description": "The API secret of the application (provided only at its creation)."
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "contents": {
            "$ref": "#/components/schemas/ApplicationContents"
          }
        }
      },
      "ApplicationHash": {
        "type": "object",
        "patternProperties": {
          "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$": {
            "$ref": "#/components/schemas/Application"
          }
        }
      },
      "ApplicationItem": {
        "type": "object",
        "required": [
          "item",
          "applications"
        ],
        "properties": {
          "item": {
            "type": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          },
          "entry": {
            "type": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "description": "Deprecated, use the `item` property instead."
          },
          "applications": {
            "$ref": "#/components/schemas/ApplicationHash"
          }
        }
      },
      "ApplicationItems": {
        "type": "object",
        "required": [
          "items",
          "applications"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
            },
            "minItems": 0,
            "uniqueItems": true
          },
          "applications": {
            "$ref": "#/components/schemas/ApplicationHash"
          }
        }
      },
      "UserContents": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "email",
          "phone"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "zipcode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "birthDate": {
            "type": "string",
            "format": "date"
          },
          "gender": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "contents"
        ],
        "properties": {
          "id": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          },
          "locale": {
            "type": "string",
            "pattern": "^[a-z]{2}(-[A-Z]{2,3})?$",
            "maxLength": 5
          },
          "timeZone": {
            "type": "string",
            "pattern": "^[a-zA-Z]+/[a-zA-Z]+$",
            "maxLength": 50
          },
          "signupType": {
            "type": "string",
            "description": "With which signup method the user has been created",
            "enum": [
              "form",
              "invitation",
              "unknown"
            ]
          },
          "emailVerified": {
            "description": "User email got verified with a link",
            "type": "boolean"
          },
          "organisationsIds": {
            "type": "array",
            "items": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            },
            "minItems": 0,
            "uniqueItems": true
          },
          "roles": {
            "type": "array",
            "minItems": 1,
            "maxItems": 3,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ROLE_USER",
                "ROLE_ADMIN",
                "ROLE_TEAM"
              ]
            }
          },
          "contents": {
            "$ref": "#/components/schemas/UserContents"
          }
        }
      },
      "UserHash": {
        "type": "object",
        "patternProperties": {
          "^[0-9]+$": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "UserItem": {
        "type": "object",
        "required": [
          "item",
          "users"
        ],
        "properties": {
          "item": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          },
          "users": {
            "$ref": "#/components/schemas/PartialUserHash"
          }
        }
      },
      "UserItems": {
        "type": "object",
        "required": [
          "items",
          "users"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
            },
            "minItems": 0,
            "uniqueItems": true
          },
          "users": {
            "$ref": "#/components/schemas/UserHash"
          }
        }
      },
      "NewUser": {
        "type": "object",
        "required": [
          "contents",
          "password"
        ],
        "properties": {
          "id": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          },
          "locale": {
            "type": "string",
            "pattern": "^[a-z]{2}(-[A-Z]{2,3})?$",
            "maxLength": 5
          },
          "timeZone": {
            "type": "string",
            "pattern": "^[a-zA-Z]+/[a-zA-Z]+$",
            "maxLength": 50
          },
          "signupType": {
            "type": "string",
            "description": "With which signup method the user has been created",
            "enum": [
              "form",
              "invitation",
              "unknown"
            ]
          },
          "emailVerified": {
            "description": "User email got verified with a link",
            "type": "boolean"
          },
          "organisationsIds": {
            "type": "array",
            "items": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            },
            "minItems": 0,
            "uniqueItems": true
          },
          "roles": {
            "type": "array",
            "minItems": 1,
            "maxItems": 3,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ROLE_USER",
                "ROLE_ADMIN",
                "ROLE_TEAM"
              ]
            }
          },
          "contents": {
            "$ref": "#/components/schemas/UserContents"
          },
          "password": {
            "type": "string",
            "minLength": 8
          },
          "callbackPath": {
            "type": "string"
          }
        }
      },
      "PartialUserHash": {
        "type": "object",
        "patternProperties": {
          "^[0-9]+$": {
            "$ref": "#/components/schemas/PartialUser"
          }
        }
      },
      "PartialUserContents": {
        "description": "A user that may only have an email",
        "oneOf": [
          {
            "$ref": "#/components/schemas/UserContents"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "email"
            ],
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              },
              "phone": {
                "type": "string"
              },
              "firstname": {
                "type": "string"
              },
              "lastname": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "zipcode": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "birthDate": {
                "type": "string",
                "format": "date"
              },
              "gender": {
                "type": "string"
              }
            }
          }
        ]
      },
      "PartialUser": {
        "type": "object",
        "required": [
          "contents"
        ],
        "properties": {
          "id": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          },
          "locale": {
            "type": "string",
            "pattern": "^[a-z]{2}(-[A-Z]{2,3})?$",
            "maxLength": 5
          },
          "timeZone": {
            "type": "string",
            "pattern": "^[a-zA-Z]+/[a-zA-Z]+$",
            "maxLength": 50
          },
          "contents": {
            "$ref": "#/components/schemas/PartialUserContents"
          }
        }
      },
      "AggregationContents": {
        "oneOf": [
          {
            "type": "object",
            "description": "Date resolve aggregation",
            "required": [
              "name",
              "type",
              "aggregation",
              "ceil",
              "devicesIds"
            ],
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "date"
                ]
              },
              "aggregation": {
                "type": "string",
                "enum": [
                  "DEGREE_DAY",
                  "COLD_HOURS",
                  "RAIN_FALL_SUM",
                  "LEAF_WETNESS",
                  "LEAF_WETNESS_MEDIUM",
                  "LEAF_WETNESS_HIGH"
                ]
              },
              "ceil": {
                "type": "number"
              },
              "parameters": {
                "type": "object",
                "properties": {
                  "base": {
                    "type": "number"
                  }
                }
              },
              "devicesIds": {
                "type": "array",
                "items": {
                  "type": "number",
                  "pattern": "^[0-9]+$",
                  "minimum": 1
                },
                "minItems": 1,
                "uniqueItems": true
              }
            }
          },
          {
            "type": "object",
            "description": "Time span value aggregation",
            "required": [
              "name",
              "type",
              "aggregation",
              "timeSpan",
              "devicesIds"
            ],
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "value"
                ]
              },
              "aggregation": {
                "type": "string",
                "enum": [
                  "DEGREE_DAY",
                  "COLD_HOURS",
                  "RAIN_FALL_SUM",
                  "LEAF_WETNESS",
                  "LEAF_WETNESS_MEDIUM",
                  "LEAF_WETNESS_HIGH"
                ]
              },
              "timeSpan": {
                "type": "integer",
                "minimum": 1
              },
              "parameters": {
                "type": "object",
                "properties": {
                  "base": {
                    "type": "number"
                  }
                }
              },
              "devicesIds": {
                "type": "array",
                "items": {
                  "type": "number",
                  "pattern": "^[0-9]+$",
                  "minimum": 1
                },
                "minItems": 1,
                "uniqueItems": true
              }
            }
          },
          {
            "type": "object",
            "description": "Date interval value aggregation",
            "required": [
              "name",
              "type",
              "aggregation",
              "startDate",
              "devicesIds"
            ],
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "value"
                ]
              },
              "aggregation": {
                "type": "string",
                "enum": [
                  "DEGREE_DAY",
                  "COLD_HOURS",
                  "RAIN_FALL_SUM",
                  "LEAF_WETNESS",
                  "LEAF_WETNESS_MEDIUM",
                  "LEAF_WETNESS_HIGH"
                ]
              },
              "startDate": {
                "type": "string",
                "format": "date-time"
              },
              "endDate": {
                "type": "string",
                "format": "date-time"
              },
              "parameters": {
                "type": "object",
                "properties": {
                  "base": {
                    "type": "number"
                  }
                }
              },
              "devicesIds": {
                "type": "array",
                "items": {
                  "type": "number",
                  "pattern": "^[0-9]+$",
                  "minimum": 1
                },
                "minItems": 1,
                "uniqueItems": true
              }
            }
          }
        ]
      },
      "Aggregation": {
        "type": "object",
        "required": [
          "contents"
        ],
        "properties": {
          "id": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          },
          "contents": {
            "$ref": "#/components/schemas/AggregationContents"
          }
        }
      },
      "AggregationHash": {
        "type": "object",
        "patternProperties": {
          "^[0-9]+$": {
            "$ref": "#/components/schemas/Aggregation"
          }
        }
      },
      "AggregationItem": {
        "type": "object",
        "required": [
          "item",
          "aggregations"
        ],
        "properties": {
          "item": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          },
          "entry": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1,
            "description": "Deprecated, use the `item` property instead."
          },
          "aggregations": {
            "$ref": "#/components/schemas/AggregationHash"
          }
        }
      },
      "AggregationItems": {
        "type": "object",
        "required": [
          "items",
          "aggregations"
        ],
        "properties": {
          "aggregations": {
            "$ref": "#/components/schemas/AggregationHash"
          },
          "aggregationsResults": {
            "$ref": "#/components/schemas/AggregationsResultsHash"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            },
            "minItems": 0,
            "uniqueItems": true
          }
        }
      },
      "AggregationResult": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "DEGREE_DAY",
              "COLD_HOURS",
              "RAIN_FALL_SUM",
              "LEAF_WETNESS",
              "LEAF_WETNESS_MEDIUM",
              "LEAF_WETNESS_HIGH"
            ]
          }
        },
        "patternProperties": {
          "^DEGREE_DAY|COLD_HOURS|RAIN_FALL_SUM|LEAF_WETNESS|LEAF_WETNESS_MEDIUM|LEAF_WETNESS_HIGH$": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number"
              }
            }
          }
        }
      },
      "AggregationsResultsHash": {
        "type": "object",
        "patternProperties": {
          "^[0-9]+$": {
            "$ref": "#/components/schemas/AggregationResult"
          }
        }
      },
      "UserPreferences": {
        "type": "object",
        "required": [
          "areasUnit",
          "locale",
          "precipitationsUnit",
          "smallVolumesUnit",
          "speedsUnit",
          "temperaturesUnit",
          "volumesUnit",
          "weightsUnit"
        ],
        "properties": {
          "areasUnit": {
            "type": "string",
            "enum": [
              "HA",
              "A"
            ]
          },
          "locale": {
            "type": "string",
            "pattern": "^[a-z]{2}(-[A-Z]{2,3})?$",
            "maxLength": 5
          },
          "precipitationsUnit": {
            "type": "string",
            "enum": [
              "MM",
              "INCH"
            ]
          },
          "smallVolumesUnit": {
            "type": "string",
            "enum": [
              "L",
              "GAL_US"
            ]
          },
          "speedsUnit": {
            "type": "string",
            "enum": [
              "KPH",
              "MPH"
            ]
          },
          "temperaturesUnit": {
            "type": "string",
            "enum": [
              "C",
              "F"
            ]
          },
          "volumesUnit": {
            "type": "string",
            "enum": [
              "M3",
              "CU_YD"
            ]
          },
          "weightsUnit": {
            "type": "string",
            "enum": [
              "T",
              "SH_TN"
            ]
          },
          "optionalMeasures": {
            "type": "array",
            "minItems": 0,
            "items": {
              "type": "string",
              "enum": [
                "WET_TEMPERATURE",
                "DEW_POINT",
                "BANANA_FLOWER_CUT"
              ]
            }
          }
        }
      },
      "OperationContents": {
        "type": "object",
        "required": [
          "name",
          "type",
          "devicesIds",
          "startDate",
          "details"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "irrigation",
              "spraying",
              "seeding"
            ]
          },
          "devicesIds": {
            "type": "array",
            "items": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            },
            "minItems": 0,
            "uniqueItems": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "details": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "Operation": {
        "type": "object",
        "required": [
          "contents"
        ],
        "properties": {
          "id": {
            "type": "number",
            "pattern": "^[0-9]+$"
          },
          "contents": {
            "$ref": "#/components/schemas/OperationContents"
          }
        }
      },
      "OperationHash": {
        "type": "object",
        "patternProperties": {
          "^[0-9]+$": {
            "$ref": "#/components/schemas/Operation"
          }
        }
      },
      "OperationItem": {
        "type": "object",
        "required": [
          "item",
          "operations"
        ],
        "properties": {
          "item": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          },
          "entry": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1,
            "description": "Deprecated, use the `item` property instead."
          },
          "operations": {
            "$ref": "#/components/schemas/OperationHash"
          }
        }
      },
      "OperationsItems": {
        "type": "object",
        "required": [
          "items",
          "operations"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            },
            "minItems": 0,
            "uniqueItems": true
          },
          "operations": {
            "$ref": "#/components/schemas/OperationHash"
          }
        }
      },
      "AlertContents": {
        "type": "object",
        "required": [
          "name",
          "status",
          "notificationTypes",
          "numberOfNotificationPerTrigger",
          "devicesIds",
          "conditions"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "notificationTypes": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "type": "string",
              "enum": [
                "sms",
                "email",
                "phone",
                "webhook",
                "push",
                "notification"
              ]
            }
          },
          "conditions": {
            "$ref": "#/components/schemas/AlertGroupConditions"
          },
          "enableStartTime": {
            "type": "string",
            "format": "time"
          },
          "enableEndTime": {
            "type": "string",
            "format": "time"
          },
          "numberOfNotificationPerTrigger": {
            "type": "number",
            "minimum": 1
          },
          "renewInterval": {
            "type": "number",
            "description": "Cooldown before alert is armed again automatically, in second"
          },
          "devicesIds": {
            "type": "array",
            "items": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            },
            "minItems": 1,
            "uniqueItems": true
          }
        }
      },
      "Alert": {
        "type": "object",
        "required": [
          "contents"
        ],
        "properties": {
          "id": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          },
          "userId": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          },
          "activationDate": {
            "type": "string",
            "format": "date-time"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "deletionDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastModificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastCheckDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastTriggerDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastNotificationTriggerDate": {
            "type": "string",
            "format": "date-time"
          },
          "contents": {
            "$ref": "#/components/schemas/AlertContents"
          }
        }
      },
      "AlertHash": {
        "type": "object",
        "patternProperties": {
          "^[0-9]+$": {
            "$ref": "#/components/schemas/Alert"
          }
        }
      },
      "AlertItem": {
        "type": "object",
        "required": [
          "item",
          "alerts"
        ],
        "properties": {
          "item": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          },
          "entry": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1,
            "description": "Deprecated, use the `item` property instead."
          },
          "alerts": {
            "$ref": "#/components/schemas/AlertHash"
          }
        }
      },
      "AlertsItems": {
        "type": "object",
        "required": [
          "items",
          "alerts"
        ],
        "properties": {
          "alerts": {
            "$ref": "#/components/schemas/AlertHash"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            },
            "minItems": 0,
            "uniqueItems": true
          }
        }
      },
      "AlertConditions": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "ceil",
              "type",
              "ceilComparisonType",
              "timespan",
              "aggregation"
            ],
            "properties": {
              "ceil": {
                "type": "number"
              },
              "type": {
                "type": "string",
                "enum": [
                  "aggregation"
                ]
              },
              "ceilComparisonType": {
                "type": "string",
                "enum": [
                  "lte",
                  "gte"
                ]
              },
              "timespan": {
                "type": "number"
              },
              "startDate": {
                "type": "string",
                "format": "date-time"
              },
              "aggregation": {
                "type": "string",
                "enum": [
                  "RELATIVE_HUMIDITY_MEAN",
                  "RELATIVE_HUMIDITY_MIN",
                  "RELATIVE_HUMIDITY_MAX",
                  "TEMPERATURE_MEAN",
                  "TEMPERATURE_MIN",
                  "TEMPERATURE_MAX",
                  "WET_TEMPERATURE_MEAN",
                  "WET_TEMPERATURE_MIN",
                  "WET_TEMPERATURE_MAX",
                  "RAIN_FALL_MEAN_SUM",
                  "RAIN_FALL_SUM",
                  "RAIN_FALL_MIN",
                  "RAIN_FALL_MAX",
                  "MOVE_SUM",
                  "INIT_SUM",
                  "WIND_SPEED_MEAN",
                  "WIND_SPEED_MIN",
                  "WIND_SPEED_MAX",
                  "WIND_GUST_MEAN",
                  "WIND_GUST_MIN",
                  "WIND_GUST_MAX",
                  "WIND_DIRECTION_MEAN",
                  "DEGREE_DAY",
                  "COLD_HOURS",
                  "LEAF_SENSOR_CONDUCTIVITY_MIN",
                  "LEAF_SENSOR_CONDUCTIVITY_MAX",
                  "LEAF_SENSOR_CONDUCTIVITY_MEAN",
                  "LEAF_WETNESS",
                  "LEAF_WETNESS_MEDIUM",
                  "LEAF_WETNESS_HIGH"
                ]
              },
              "aggregationParams": {
                "type": "object",
                "additionalProperties": true
              }
            }
          },
          {
            "type": "object",
            "required": [
              "ceil",
              "type",
              "ceilComparisonType",
              "startDate",
              "aggregation"
            ],
            "properties": {
              "ceil": {
                "type": "number"
              },
              "type": {
                "type": "string",
                "enum": [
                  "aggregation"
                ]
              },
              "ceilComparisonType": {
                "type": "string",
                "enum": [
                  "lte",
                  "gte"
                ]
              },
              "timespan": {
                "type": "number"
              },
              "startDate": {
                "type": "string",
                "format": "date-time"
              },
              "aggregation": {
                "type": "string",
                "enum": [
                  "RELATIVE_HUMIDITY_MEAN",
                  "RELATIVE_HUMIDITY_MIN",
                  "RELATIVE_HUMIDITY_MAX",
                  "TEMPERATURE_MEAN",
                  "TEMPERATURE_MIN",
                  "TEMPERATURE_MAX",
                  "WET_TEMPERATURE_MEAN",
                  "WET_TEMPERATURE_MIN",
                  "WET_TEMPERATURE_MAX",
                  "RAIN_FALL_MEAN_SUM",
                  "RAIN_FALL_SUM",
                  "RAIN_FALL_MIN",
                  "RAIN_FALL_MAX",
                  "MOVE_SUM",
                  "INIT_SUM",
                  "WIND_SPEED_MEAN",
                  "WIND_SPEED_MIN",
                  "WIND_SPEED_MAX",
                  "WIND_GUST_MEAN",
                  "WIND_GUST_MIN",
                  "WIND_GUST_MAX",
                  "WIND_DIRECTION_MEAN",
                  "DEGREE_DAY",
                  "COLD_HOURS",
                  "LEAF_SENSOR_CONDUCTIVITY_MIN",
                  "LEAF_SENSOR_CONDUCTIVITY_MAX",
                  "LEAF_SENSOR_CONDUCTIVITY_MEAN",
                  "LEAF_WETNESS",
                  "LEAF_WETNESS_MEDIUM",
                  "LEAF_WETNESS_HIGH"
                ]
              },
              "aggregationParams": {
                "type": "object",
                "properties": {
                  "base": {
                    "type": "number"
                  }
                }
              }
            }
          }
        ]
      },
      "AlertGroupConditions": {
        "type": "object",
        "required": [
          "type",
          "tests"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "and",
              "or"
            ]
          },
          "tests": {
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/AlertConditions"
            }
          }
        }
      },
      "PlaceContents": {
        "oneOf": [
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "googlePlaceId"
            ],
            "properties": {
              "googlePlaceId": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "googlePlaceId",
              "address",
              "location",
              "googleAddressComponents"
            ],
            "properties": {
              "googlePlaceId": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "location": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "lat",
                  "lng"
                ],
                "properties": {
                  "lat": {
                    "type": "number"
                  },
                  "lng": {
                    "type": "number"
                  }
                }
              },
              "googleAddressComponents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "long_name",
                    "short_name",
                    "types"
                  ],
                  "properties": {
                    "long_name": {
                      "type": "string"
                    },
                    "short_name": {
                      "type": "string"
                    },
                    "types": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "Place": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "contents"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "contents": {
            "$ref": "#/components/schemas/PlaceContents"
          }
        }
      },
      "PlaceHash": {
        "type": "object",
        "patternProperties": {
          "undefined": {
            "$ref": "#/components/schemas/Place"
          }
        }
      },
      "PlaceItem": {
        "type": "object",
        "required": [
          "item",
          "places"
        ],
        "properties": {
          "item": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          },
          "places": {
            "$ref": "#/components/schemas/PlaceHash"
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          },
          "type": {
            "type": "string",
            "enum": [
              "app",
              "user",
              "partner",
              "module",
              "alert",
              "device"
            ]
          },
          "data": {
            "type": "object",
            "additionalProperties": true
          },
          "message": {
            "type": "string"
          },
          "read": {
            "type": "boolean"
          },
          "links": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "label",
                "url"
              ],
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Anchor text"
                },
                "tooltip": {
                  "type": "string",
                  "description": "Anchor tooltip text"
                },
                "url": {
                  "type": "string"
                }
              }
            }
          },
          "actions": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "label",
                "operationId",
                "parameters"
              ],
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Button text"
                },
                "tooltip": {
                  "type": "string",
                  "description": "Button tooltip text"
                },
                "operationId": {
                  "type": "string",
                  "description": "Operation id binded to the action"
                },
                "parameters": {
                  "type": "string",
                  "description": "JSON payload of the action parameters"
                }
              }
            }
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "label",
                "url"
              ],
              "properties": {
                "label": {
                  "type": "string"
                },
                "operationId": {
                  "type": "string",
                  "description": "Operation id binded to the action"
                },
                "parameters": {
                  "type": "string",
                  "description": "JSON payload of the action parameters"
                }
              }
            }
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "NotificationHash": {
        "type": "object",
        "patternProperties": {
          "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$": {
            "$ref": "#/components/schemas/Notification"
          }
        }
      },
      "NotificationsItems": {
        "type": "object",
        "required": [
          "items",
          "notifications",
          "sinceCursor"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
            },
            "minItems": 0,
            "uniqueItems": true
          },
          "notifications": {
            "$ref": "#/components/schemas/NotificationHash"
          },
          "nextCursor": {
            "type": "string",
            "description": "Opaque cursor you can reuse to get older items."
          },
          "sinceCursor": {
            "type": "string",
            "description": "Opaque cursor you can reuse to get fresher items."
          }
        }
      },
      "DeviceLiveAggregation": {
        "type": "object",
        "additionalProperties": false,
        "patternProperties": {
          "RELATIVE_HUMIDITY_MEAN|RELATIVE_HUMIDITY_MIN|RELATIVE_HUMIDITY_MAX|TEMPERATURE_MEAN|TEMPERATURE_MIN|TEMPERATURE_MAX|WET_TEMPERATURE_MEAN|WET_TEMPERATURE_MIN|WET_TEMPERATURE_MAX|RAIN_FALL_MEAN_SUM|RAIN_FALL_SUM|RAIN_FALL_MIN|RAIN_FALL_MAX|MOVE_SUM|INIT_SUM|WIND_SPEED_MEAN|WIND_SPEED_MIN|WIND_SPEED_MAX|WIND_GUST_MEAN|WIND_GUST_MIN|WIND_GUST_MAX|WIND_DIRECTION_MEAN|DEGREE_DAY|COLD_HOURS|LEAF_SENSOR_CONDUCTIVITY_MIN|LEAF_SENSOR_CONDUCTIVITY_MAX|LEAF_SENSOR_CONDUCTIVITY_MEAN|LEAF_WETNESS|LEAF_WETNESS_MEDIUM|LEAF_WETNESS_HIGH": {
            "type": "object",
            "patternProperties": {
              "current|one_hour|three_hours|one_day|one_week|today|yesterday|this_week|last_seven_days": {
                "type": "number"
              }
            }
          }
        }
      },
      "DeviceLiveAggregationHash": {
        "type": "object",
        "patternProperties": {
          "^[0-9]+$": {
            "$ref": "#/components/schemas/DeviceLiveAggregation"
          }
        }
      },
      "DeviceLiveAggregationItems": {
        "type": "object",
        "required": [
          "items",
          "devicesLiveAggregations"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            },
            "minItems": 0,
            "uniqueItems": true
          },
          "devicesLiveAggregations": {
            "$ref": "#/components/schemas/DeviceLiveAggregationHash"
          }
        }
      },
      "DeviceStatistics": {
        "type": "object",
        "required": [
          "item",
          "models",
          "devices",
          "measures"
        ],
        "properties": {
          "models": {
            "$ref": "#/components/schemas/ModelHash"
          },
          "devices": {
            "$ref": "#/components/schemas/DeviceHash"
          },
          "item": {
            "type": "string",
            "pattern": "^[0-9]+$",
            "description": "Deprecated, use the `item` property instead."
          },
          "entry": {
            "type": "string",
            "pattern": "^[0-9]+$",
            "description": "Deprecated, use the `item` property instead."
          },
          "measures": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true,
              "properties": {
                "key": {
                  "type": "number"
                },
                "docCount": {
                  "type": "number"
                }
              }
            }
          }
        }
      },
      "CheckoutContents": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "type",
          "ownerId",
          "currency",
          "products",
          "customer",
          "delivery",
          "payment"
        ],
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "created",
              "sent",
              "viewed",
              "inTrial",
              "trialEnded",
              "clicked",
              "ended"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "web",
              "tradeshow"
            ]
          },
          "ownerId": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          },
          "currency": {
            "type": "string",
            "enum": [
              "EUR",
              "GBP"
            ]
          },
          "hubspotDealId": {
            "type": "string"
          },
          "couponCodeId": {
            "type": "string"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "quantity"
              ],
              "properties": {
                "id": {
                  "type": "number",
                  "pattern": "^[0-9]+$",
                  "minimum": 1
                },
                "quantity": {
                  "type": "number",
                  "minimum": 1
                }
              }
            }
          },
          "customer": {
            "type": "object",
            "required": [
              "locale",
              "firstname",
              "lastname",
              "email"
            ],
            "properties": {
              "locale": {
                "type": "string",
                "pattern": "^[a-z]{2}(-[A-Z]{2,3})?$",
                "maxLength": 5
              },
              "timeZone": {
                "type": "string",
                "pattern": "^[a-zA-Z]+/[a-zA-Z]+$",
                "maxLength": 50
              },
              "firstname": {
                "type": "string"
              },
              "lastname": {
                "type": "string"
              },
              "email": {
                "type": "string",
                "format": "email"
              },
              "country": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              }
            }
          },
          "delivery": {
            "type": "object",
            "required": [
              "type",
              "zone"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "sending",
                  "onlyTripod"
                ]
              },
              "zone": {
                "type": "string",
                "enum": [
                  "France",
                  "Europe"
                ]
              }
            }
          },
          "tradeshow": {
            "type": "object",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "string"
              }
            }
          },
          "payment": {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "immediate",
                  "delayed"
                ]
              },
              "delayedDate": {
                "type": "string",
                "format": "date-time",
                "description": "Date for delayed payment"
              }
            }
          }
        }
      },
      "Checkout": {
        "type": "object",
        "required": [
          "contents"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          },
          "url": {
            "type": "string"
          },
          "chargebeeHostedPage": {
            "type": "object",
            "additionalProperties": true
          },
          "chargebeeEstimate": {
            "type": "object",
            "additionalProperties": true
          },
          "contents": {
            "$ref": "#/components/schemas/CheckoutContents"
          }
        }
      },
      "CheckoutHash": {
        "type": "object",
        "patternProperties": {
          "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$": {
            "$ref": "#/components/schemas/Checkout"
          }
        }
      },
      "CheckoutItem": {
        "type": "object",
        "required": [
          "item",
          "checkouts"
        ],
        "properties": {
          "item": {
            "type": "string",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
          },
          "checkouts": {
            "$ref": "#/components/schemas/CheckoutHash"
          }
        }
      },
      "CheckoutItems": {
        "type": "object",
        "required": [
          "items",
          "checkouts"
        ],
        "properties": {
          "items": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
            }
          },
          "checkouts": {
            "$ref": "#/components/schemas/CheckoutHash"
          }
        }
      },
      "Emails": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "subject": {
              "type": "string"
            },
            "text": {
              "type": "string"
            },
            "html": {
              "type": "string"
            },
            "from": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string"
              }
            },
            "to": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "Session": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "token",
          "expirationDate",
          "userId",
          "organisationId"
        ],
        "properties": {
          "token": {
            "type": "string"
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          },
          "organisationId": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          },
          "organisationsIds": {
            "type": "array",
            "items": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            },
            "minItems": 1,
            "uniqueItems": true
          },
          "roles": {
            "type": "array",
            "minItems": 1,
            "maxItems": 2,
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ROLE_USER",
                "ROLE_ADMIN"
              ]
            }
          }
        }
      },
      "AuthorizationCodeTokenRequestBody": {
        "type": "object",
        "description": "Authorization code grant, see https://tools.ietf.org/html/rfc6749#section-4.1",
        "required": [
          "grant_type"
        ],
        "properties": {
          "grant_type": {
            "type": "string",
            "enum": [
              "authorization_code"
            ]
          },
          "code": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "redirect_uri": {
            "type": "string",
            "format": "url"
          }
        }
      },
      "PasswordTokenRequestBody": {
        "type": "object",
        "description": "Resource owner password credentials grant, see https://tools.ietf.org/html/rfc6749#section-4.3",
        "required": [
          "grant_type",
          "username",
          "password"
        ],
        "properties": {
          "grant_type": {
            "type": "string",
            "enum": [
              "password"
            ]
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "scope": {
            "type": "string",
            "description": "See https://tools.ietf.org/html/rfc6749#section-3.3"
          }
        }
      },
      "ClientCredentialsTokenRequestBody": {
        "type": "object",
        "description": "Client credentials grant, see https://tools.ietf.org/html/rfc6749#section-4.4",
        "required": [
          "grant_type"
        ],
        "properties": {
          "grant_type": {
            "type": "string",
            "enum": [
              "client_credentials"
            ]
          },
          "scope": {
            "type": "string",
            "description": "See https://tools.ietf.org/html/rfc6749#section-3.3"
          }
        }
      },
      "RefreshTokenRequestBody": {
        "type": "object",
        "description": "Token refresh grant type, see https://tools.ietf.org/html/rfc6749#section-6 .",
        "required": [
          "grant_type",
          "refresh_token"
        ],
        "properties": {
          "grant_type": {
            "type": "string",
            "enum": [
              "refresh_token"
            ]
          },
          "refresh_token": {
            "type": "string"
          },
          "scope": {
            "type": "string",
            "description": "See https://tools.ietf.org/html/rfc6749#section-3.3"
          }
        }
      },
      "ModuleTokenRequestBody": {
        "type": "object",
        "description": "Module grant type, see https://tools.ietf.org/html/rfc6749#section-6 .",
        "required": [
          "grant_type",
          "email"
        ],
        "properties": {
          "grant_type": {
            "type": "string",
            "enum": [
              "module"
            ]
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "scope": {
            "type": "string",
            "description": "See https://tools.ietf.org/html/rfc6749#section-3.3"
          }
        }
      },
      "CodeRequestTokenRequestBody": {
        "type": "object",
        "description": "SMS Code request grant type, see https://tools.ietf.org/html/rfc6749#section-6 .",
        "required": [
          "grant_type",
          "email",
          "code"
        ],
        "properties": {
          "grant_type": {
            "type": "string",
            "enum": [
              "code_request"
            ]
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "code": {
            "type": "string"
          },
          "scope": {
            "type": "string",
            "description": "See https://tools.ietf.org/html/rfc6749#section-3.3"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "pattern": "^E_[a-zA-Z0-9_]+$"
          }
        }
      },
      "CollaboratorInvitation": {
        "type": "object",
        "required": [
          "sharedDevicesIds",
          "user"
        ],
        "properties": {
          "user": {
            "$ref": "#/components/schemas/PartialUser"
          },
          "sharedDevicesIds": {
            "type": "array",
            "items": {
              "type": "number",
              "pattern": "^[0-9]+$"
            }
          },
          "callbackPath": {
            "type": "string"
          }
        }
      },
      "CollaboratorContents": {
        "type": "object",
        "required": [
          "collaboratorUserId",
          "sharedDevicesIds"
        ],
        "properties": {
          "collaboratorUserId": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          },
          "sharedDevicesIds": {
            "type": "array",
            "items": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          }
        }
      },
      "Collaborator": {
        "type": "object",
        "required": [
          "contents"
        ],
        "properties": {
          "id": {
            "type": "number",
            "pattern": "^[0-9]+$"
          },
          "contents": {
            "$ref": "#/components/schemas/CollaboratorContents"
          }
        }
      },
      "CollaboratorHash": {
        "type": "object",
        "patternProperties": {
          "^[0-9]+$": {
            "$ref": "#/components/schemas/Collaborator"
          }
        }
      },
      "CollaboratorItem": {
        "type": "object",
        "required": [
          "item",
          "collaborators",
          "users",
          "devices"
        ],
        "properties": {
          "users": {
            "$ref": "#/components/schemas/UserHash"
          },
          "devices": {
            "$ref": "#/components/schemas/DeviceHash"
          },
          "collaborators": {
            "$ref": "#/components/schemas/CollaboratorHash"
          },
          "item": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          }
        }
      },
      "CollaboratorItems": {
        "type": "object",
        "required": [
          "items",
          "collaborators",
          "users",
          "devices"
        ],
        "properties": {
          "users": {
            "$ref": "#/components/schemas/UserHash"
          },
          "devices": {
            "$ref": "#/components/schemas/DeviceHash"
          },
          "collaborators": {
            "$ref": "#/components/schemas/CollaboratorHash"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            },
            "minItems": 0,
            "uniqueItems": true
          }
        }
      },
      "GuestInvitation": {
        "type": "object",
        "required": [
          "sharedDevicesIds",
          "user"
        ],
        "properties": {
          "user": {
            "$ref": "#/components/schemas/PartialUser"
          },
          "sharedDevicesIds": {
            "type": "array",
            "items": {
              "type": "number",
              "pattern": "^[0-9]+$"
            }
          },
          "callbackPath": {
            "type": "string"
          }
        }
      },
      "GuestContents": {
        "type": "object",
        "required": [
          "guestUserId",
          "sharedDevicesIds"
        ],
        "properties": {
          "guestUserId": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          },
          "sharedDevicesIds": {
            "type": "array",
            "items": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          }
        }
      },
      "Guest": {
        "type": "object",
        "required": [
          "contents"
        ],
        "properties": {
          "id": {
            "type": "number",
            "pattern": "^[0-9]+$"
          },
          "contents": {
            "$ref": "#/components/schemas/GuestContents"
          }
        }
      },
      "GuestHash": {
        "type": "object",
        "patternProperties": {
          "^[0-9]+$": {
            "$ref": "#/components/schemas/Guest"
          }
        }
      },
      "GuestItem": {
        "type": "object",
        "required": [
          "item",
          "guests",
          "users",
          "devices"
        ],
        "properties": {
          "users": {
            "$ref": "#/components/schemas/UserHash"
          },
          "devices": {
            "$ref": "#/components/schemas/DeviceHash"
          },
          "guests": {
            "$ref": "#/components/schemas/GuestHash"
          },
          "item": {
            "type": "number",
            "pattern": "^[0-9]+$",
            "minimum": 1
          }
        }
      },
      "GuestItems": {
        "type": "object",
        "required": [
          "items",
          "guests",
          "users",
          "devices"
        ],
        "properties": {
          "users": {
            "$ref": "#/components/schemas/UserHash"
          },
          "devices": {
            "$ref": "#/components/schemas/DeviceHash"
          },
          "guests": {
            "$ref": "#/components/schemas/GuestHash"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            },
            "minItems": 0,
            "uniqueItems": true
          }
        }
      }
    }
  },
  "paths": {
    "/ping": {
      "get": {
        "operationId": "getPing",
        "summary": "Checks API's availability.",
        "tags": [
          "system"
        ],
        "responses": {
          "200": {
            "description": "Pong",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "pong": {
                      "type": "string",
                      "enum": [
                        "pong"
                      ]
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ]
      }
    },
    "/openAPI": {
      "get": {
        "operationId": "getOpenAPI",
        "summary": "Get API documentation.",
        "tags": [
          "system"
        ],
        "responses": {
          "200": {
            "description": "Provides the private Open API documentation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "maybeBearerAuth": [
              "admin"
            ]
          },
          {
            "accessTokenAuth": [
              "admin"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ]
      }
    },
    "/crops": {
      "get": {
        "operationId": "getCrops",
        "summary": "Get the crops",
        "tags": [
          "miscellaneous"
        ],
        "responses": {
          "200": {
            "description": "List of the crops",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CropsItems"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ]
      }
    },
    "/modules": {
      "get": {
        "operationId": "getModules",
        "summary": "Get the modules",
        "tags": [
          "modules",
          "partners"
        ],
        "responses": {
          "200": {
            "description": "List of the modules",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleItems"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ]
      }
    },
    "/organisations/{organisationId}": {
      "get": {
        "operationId": "getOrganisation",
        "summary": "Get the organisation.",
        "tags": [
          "organisations"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The organisation id",
            "name": "organisationId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The organisation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationItem"
                }
              }
            }
          },
          "404": {
            "description": "Organisation does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "putOrganisation",
        "summary": "Update an organisation.",
        "tags": [
          "organisations"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The organisation id",
            "name": "organisationId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "The modified organisation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The organisation were sucessfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationItem"
                }
              }
            }
          },
          "404": {
            "description": "Organisation does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/organisations": {
      "post": {
        "operationId": "postOrganisation",
        "summary": "Creates a new organisation.",
        "tags": [
          "organisations"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "The necessary contents to create a new organisation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The organisation were created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationItem"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getUserOrganisations",
        "summary": "Get all user's organisations.",
        "tags": [
          "organisations"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user's organisations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationItems"
                }
              }
            }
          },
          "404": {
            "description": "User or organisation does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{organisationId}/users/{targetUserId}": {
      "post": {
        "operationId": "postOrganisationUser",
        "summary": "Add an user to an organisation",
        "tags": [
          "organisations",
          "users"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The organisation id",
            "name": "organisationId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The user id to add",
            "name": "targetUserId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "The type of relation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "owner",
                      "administrator",
                      "collaborator",
                      "guest"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user was successfully added to the organisation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "putOrganisationUser",
        "summary": "Edit or add an user to an organisation",
        "tags": [
          "organisations",
          "users"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The organisation id",
            "name": "organisationId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The user id to add",
            "name": "targetUserId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "The type of relation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "owner",
                      "administrator",
                      "collaborator",
                      "guest"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user was successfully added to the organisation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOrganisationUser",
        "summary": "Delete an user from an organisation",
        "tags": [
          "organisations",
          "users"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The organisation id",
            "name": "organisationId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The user id to remove",
            "name": "targetUserId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The user was successfully deleted from the organisation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/utils/checkSignup": {
      "post": {
        "operationId": "postSignupCheck",
        "summary": "Hit the server to check the email can be used to signup.",
        "tags": [
          "miscellaneous"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mechanism",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "The email to check",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email can be used."
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/password/lost": {
      "post": {
        "operationId": "postLostPassword",
        "summary": "Request a password change e-mail.",
        "tags": [
          "miscellaneous"
        ],
        "requestBody": {
          "description": "The infos to send the mail",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "callbackPath": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password change email sent"
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ]
      }
    },
    "/password": {
      "put": {
        "operationId": "putPassword",
        "summary": "Change a user password",
        "tags": [
          "miscellaneous"
        ],
        "requestBody": {
          "description": "The infos to change the password",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "lostToken",
                  "newPassword"
                ],
                "additionalProperties": false,
                "properties": {
                  "lostToken": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Password changed"
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ]
      }
    },
    "/users/sign_in": {
      "post": {
        "operationId": "postLogin",
        "summary": "Log a user in",
        "tags": [
          "miscellaneous"
        ],
        "requestBody": {
          "description": "The infos to log in",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ]
      }
    },
    "/users/verify": {
      "post": {
        "operationId": "postVerify",
        "summary": "Verify a user",
        "tags": [
          "miscellaneous"
        ],
        "requestBody": {
          "description": "Verify the user",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "verify"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "verify": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User verified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ]
      }
    },
    "/partners/{partnerId}/tokenRequests": {
      "post": {
        "operationId": "postPartnerTokenRequest",
        "summary": "Request a user token",
        "tags": [
          "partners",
          "partnerAccess"
        ],
        "security": [
          {
            "basicAuth": [
              "partner"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The partner organisation id",
            "name": "partnerId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "Request a user token",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User token requested"
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/partners/{partnerId}/tokens": {
      "post": {
        "operationId": "postPartnerToken",
        "summary": "Create a user token (deprecated, use OAuth2)",
        "tags": [
          "partners",
          "deprecated"
        ],
        "security": [
          {
            "basicAuth": [
              "partner"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The partner organisation id",
            "name": "partnerId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "Create a user token",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "code"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User token created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/partners/{partnerId}/devices": {
      "get": {
        "operationId": "getPartnerDevices",
        "summary": "Retrieves the devices a partner has access to.",
        "tags": [
          "partners",
          "partnerAccess"
        ],
        "security": [
          {
            "bearerAuth": [
              "admin"
            ]
          },
          {
            "accessTokenAuth": [
              "admin"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The partner organisation id",
            "name": "partnerId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of items to retrieve",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "enum": [
                10,
                50,
                100
              ]
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "The index in results",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 0,
              "multipleOf": 10
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The devices collection",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnerDevicesItems"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/partners/{partnerId}/users/{partnerUserId}/devices/{deviceId}/modules/{moduleId}/parameters": {
      "put": {
        "operationId": "putPartnerModuleParameters",
        "summary": "Update an partner module parameters",
        "tags": [
          "partners"
        ],
        "security": [
          {
            "bearerAuth": [
              "partner"
            ]
          },
          {
            "accessTokenAuth": [
              "partner"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The partner organisation id",
            "name": "partnerId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "required": true,
            "description": "The partner user id",
            "name": "partnerUserId",
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The device id",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The module id",
            "name": "moduleId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "The module parameters",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Module sucessfully updated on the user device",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "operationId": "postUser",
        "tags": [
          "users"
        ],
        "summary": "Create a new user.",
        "requestBody": {
          "description": "The new user",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user were successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserItem"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ]
      }
    },
    "/me": {
      "get": {
        "operationId": "getMySelf",
        "summary": "Redirect to the user profile.",
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to the fully qualified profile path"
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "operationId": "getUser",
        "summary": "Get a user's profile.",
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserItem"
                }
              }
            }
          },
          "404": {
            "description": "User does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "putUser",
        "summary": "Update a user's profile.",
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "The new user",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user were created/updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserItem"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/aggregations": {
      "get": {
        "operationId": "getUserAggregations",
        "summary": "Get a user's aggregations.",
        "tags": [
          "aggregations"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "description": "Wether the aggregations should be computed",
            "name": "compute",
            "schema": {
              "pattern": "^true|false$",
              "default": false,
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "description": "Wether you want to get only original data or eventually patched ones to avoid holes.",
            "name": "patched",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested user's aggregations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AggregationItems"
                }
              }
            }
          },
          "404": {
            "description": "User does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postUserAggregation",
        "summary": "Create a user's aggregation.",
        "tags": [
          "aggregations"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "The user's aggregation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Aggregation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created user's aggregation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AggregationItem"
                }
              }
            }
          },
          "404": {
            "description": "User does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/aggregations/{aggregationId}": {
      "get": {
        "operationId": "getUserAggregation",
        "summary": "Get a single user aggregation with statistics for graphs",
        "tags": [
          "aggregations"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The aggregation id",
            "name": "aggregationId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "description": "Wether you want to get only original data or eventually patched ones to avoid holes.",
            "name": "patched",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user's aggregation updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AggregationItem"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "putUserAggregation",
        "summary": "Update a user's aggregation.",
        "tags": [
          "aggregations"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The aggregation id",
            "name": "aggregationId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "The user's aggregation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Aggregation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user's aggregation updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AggregationItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad aggregation contents",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteUserAggregation",
        "summary": "Delete a user's aggregation.",
        "tags": [
          "aggregations"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The aggregation id",
            "name": "aggregationId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The user's aggregation were successfully deleted."
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/devices": {
      "get": {
        "operationId": "getUserDevices",
        "summary": "Get a user's devices.",
        "tags": [
          "devices",
          "partnerAccess"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "description": "If must include device replacements or not",
            "name": "includeHistory",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "description": "The status date",
            "name": "date",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "description": "The measures to read",
            "name": "measures",
            "schema": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string",
                "enum": [
                  "RELATIVE_HUMIDITY",
                  "TEMPERATURE",
                  "WET_TEMPERATURE",
                  "RAIN_FALL",
                  "WIND_SPEED",
                  "WIND_GUST",
                  "WIND_DIRECTION",
                  "MOVE",
                  "LEAF_SENSOR_CONDUCTIVITY",
                  "RH_AIR_H1",
                  "TEMP_AIR_H1",
                  "RAIN_TIC",
                  "WIND_MEAN",
                  "WIND_MAX"
                ]
              }
            }
          },
          {
            "in": "query",
            "description": "Wether you want to get only original data or eventually patched ones to avoid holes.",
            "name": "patched",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of items to retrieve",
            "required": false,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "enum": [
                10,
                50,
                100
              ]
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "The index in results",
            "required": false,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 0,
              "multipleOf": 10
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested user's devices",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DevicesItems"
                }
              }
            }
          },
          "404": {
            "description": "User does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postUserDevice",
        "summary": "Setup a user's device.",
        "tags": [
          "devices"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "The user device activation couple",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identification": {
                    "type": "string",
                    "pattern": "^(WCP?|RC|SC|UMO|LC)[0-9]{6}$"
                  },
                  "activationCode": {
                    "type": "string",
                    "pattern": "^[A-Z0-9]{4,}$"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user's device created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceItem"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/devices/{deviceId}/positions": {
      "get": {
        "operationId": "getUserDevicePositions",
        "summary": "Get a user's device geographic positions historic.",
        "tags": [
          "devices"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The device id",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "description": "If must include device replacements or not",
            "name": "includeHistory",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested user's device positions history",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "locationDate": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "latitude": {
                        "minimum": -90,
                        "maximum": 90,
                        "type": "number"
                      },
                      "longitude": {
                        "minimum": -180,
                        "maximum": 180,
                        "type": "number"
                      },
                      "altitude": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/devices/{deviceId}": {
      "get": {
        "operationId": "getUserDevice",
        "summary": "Get a user's device.",
        "tags": [
          "devices"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The device id",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "description": "If must include device replacements or not",
            "name": "includeHistory",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested user's device",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceItem"
                }
              }
            }
          },
          "404": {
            "description": "User does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "putUserDevice",
        "summary": "Update a user's device.",
        "tags": [
          "devices"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The device id",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "The user device",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Device"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user's device updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceItem"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteUserDevice",
        "summary": "Delete a user's device access.",
        "tags": [
          "devices"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The device id",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The user's device access was successfully deleted."
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/devices/{deviceId}/modules": {
      "get": {
        "operationId": "getUserDeviceModules",
        "summary": "Get the modules a user activated on its device",
        "tags": [
          "devices",
          "modules"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The device id",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of the modules activated on the given user device",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModuleItems"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/devices/{deviceId}/modules/{moduleId}": {
      "put": {
        "operationId": "putUserDeviceModule",
        "summary": "Add a module to a user's device",
        "tags": [
          "devices",
          "modules"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The device id",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The module id",
            "name": "moduleId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "The module settings",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "description": "Arvalis Mileos parameters",
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "code",
                      "id"
                    ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "enum": [
                          "mileos"
                        ]
                      },
                      "id": {
                        "type": "number"
                      }
                    }
                  },
                  {
                    "description": "Syngenta Avisio parameters",
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "code",
                      "siret",
                      "organisationName"
                    ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "enum": [
                          "avisio"
                        ]
                      },
                      "siret": {
                        "type": "string"
                      },
                      "organisationName": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "Bayer Movida parameters",
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "code",
                      "id",
                      "administrator",
                      "organisationName"
                    ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "enum": [
                          "movida"
                        ]
                      },
                      "administrator": {
                        "type": "string"
                      },
                      "organisationName": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      }
                    }
                  },
                  {
                    "description": "BASF Atlas parameters",
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "code",
                      "siret"
                    ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "enum": [
                          "atlas"
                        ]
                      },
                      "siret": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "ScanBean parameters",
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "code",
                      "siret",
                      "organisationName"
                    ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "enum": [
                          "scanbean"
                        ]
                      },
                      "siret": {
                        "type": "string"
                      },
                      "organisationName": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "Vintel parameters",
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "code"
                    ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "enum": [
                          "vintel"
                        ]
                      }
                    }
                  },
                  {
                    "description": "Generic Module parameters",
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "code",
                      "externalIdentifier"
                    ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "pattern": "^[a-z0-9_]+$"
                      },
                      "externalIdentifier": {
                        "type": "string"
                      },
                      "organisationName": {
                        "type": "string"
                      },
                      "userEmail": {
                        "type": "string",
                        "format": "email"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Module sucessfully activated on the user device"
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteUserDeviceModule",
        "summary": "Disable a module for a user's device",
        "tags": [
          "devices",
          "modules"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The device id",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The module id",
            "name": "moduleId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Module sucessfully disabled for the user device"
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/devices/{deviceId}/shares/{sharesType}": {
      "put": {
        "operationId": "putUserDeviceShares",
        "summary": "Update a user's device shares.",
        "tags": [
          "devices",
          "deprecated"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The device id",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The shares type",
            "name": "sharesType",
            "required": true,
            "schema": {
              "pattern": "^(guests|collaborators)$",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "The users concerned by the user's device share",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User's device shares updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/devices/{deviceId}/statistics": {
      "get": {
        "operationId": "getUserDeviceStatistics",
        "summary": "Get a user's device's device's statistics.",
        "tags": [
          "devices",
          "data"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The device id",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "description": "The statistics start date",
            "name": "startDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "description": "The statistics end date",
            "name": "endDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "description": "The measures to read",
            "name": "measures",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string",
                "enum": [
                  "RELATIVE_HUMIDITY",
                  "RELATIVE_HUMIDITY_MIN",
                  "RELATIVE_HUMIDITY_MAX",
                  "TEMPERATURE",
                  "TEMPERATURE_MIN",
                  "TEMPERATURE_MAX",
                  "WET_TEMPERATURE",
                  "WET_TEMPERATURE_MIN",
                  "WET_TEMPERATURE_MAX",
                  "LEAF_SENSOR_CONDUCTIVITY",
                  "LEAF_SENSOR_CONDUCTIVITY_MIN",
                  "LEAF_SENSOR_CONDUCTIVITY_MAX",
                  "RAIN_FALL",
                  "WIND_SPEED",
                  "WIND_GUST",
                  "WIND_DIRECTION",
                  "MOVE",
                  "LEAF_WETNESS",
                  "LEAF_WETNESS_MEDIUM",
                  "LEAF_WETNESS_HIGH",
                  "RH_AIR_H1",
                  "RH_AIR_H1_MIN",
                  "RH_AIR_H1_MAX",
                  "TEMP_AIR_H1",
                  "TEMP_AIR_H1_MIN",
                  "TEMP_AIR_H1_MAX",
                  "RAIN_TIC",
                  "WIND_MEAN",
                  "WIND_MAX"
                ]
              }
            }
          },
          {
            "in": "query",
            "description": "Wether you want to get only original data or eventually patched ones to avoid holes.",
            "name": "patched",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "description": "If must include device replacements or not",
            "name": "includeHistory",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "The timezone of the data",
            "name": "timeZone",
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z]+/[a-zA-Z]+$",
              "maxLength": 50
            }
          },
          {
            "in": "query",
            "description": "The interval of data (Accepted value : 31 days for 1h interval, 1 year for 1d interval, 5y for 1w interval)",
            "name": "interval",
            "schema": {
              "type": "string",
              "enum": [
                "15m",
                "1h",
                "1d",
                "1w",
                "1M"
              ]
            }
          },
          {
            "in": "query",
            "description": "Wether the calibration of rain falls must be taken in count",
            "name": "withCalibration",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested device's statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceStatistics"
                }
              }
            }
          },
          "404": {
            "description": "User/device does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/devices/{deviceId}/data/raw": {
      "get": {
        "operationId": "getUserDeviceRawData",
        "summary": "Get a user's device's raw data.",
        "tags": [
          "devices",
          "data",
          "partnerAccess"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The device id",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "description": "The date before which the data starts being retrieved",
            "name": "beforeDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "description": "If must include device replacements or not",
            "name": "includeHistory",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "required": true,
            "description": "The number of measures to retrieve",
            "name": "size",
            "schema": {
              "type": "number",
              "enum": [
                10,
                50,
                100,
                500,
                1000
              ]
            }
          },
          {
            "in": "query",
            "required": true,
            "description": "The measures to read",
            "name": "measures",
            "schema": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string",
                "enum": [
                  "RELATIVE_HUMIDITY",
                  "TEMPERATURE",
                  "WET_TEMPERATURE",
                  "RAIN_FALL",
                  "WIND_SPEED",
                  "WIND_GUST",
                  "WIND_DIRECTION",
                  "MOVE",
                  "LEAF_SENSOR_CONDUCTIVITY",
                  "RH_AIR_H1",
                  "TEMP_AIR_H1",
                  "RAIN_TIC",
                  "WIND_MEAN",
                  "WIND_MAX",
                  "LAT",
                  "LNG",
                  "ALT"
                ]
              }
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested device's data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "RELATIVE_HUMIDITY",
                          "TEMPERATURE",
                          "WET_TEMPERATURE",
                          "RAIN_FALL",
                          "WIND_SPEED",
                          "WIND_GUST",
                          "WIND_DIRECTION",
                          "MOVE",
                          "LEAF_SENSOR_CONDUCTIVITY",
                          "RH_AIR_H1",
                          "TEMP_AIR_H1",
                          "RAIN_TIC",
                          "WIND_MEAN",
                          "WIND_MAX"
                        ]
                      },
                      "value": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User/device does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/devices/{deviceId}/data/hourly": {
      "get": {
        "operationId": "getUserDeviceHourlyData",
        "summary": "Get a user's device's hourly data.",
        "tags": [
          "devices",
          "data",
          "partnerAccess"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The device id",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "description": "The date before which the data starts being retrieved",
            "name": "beforeDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "description": "If must include device replacements or not",
            "name": "includeHistory",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "The timezone of the data",
            "name": "timeZone",
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z]+/[a-zA-Z]+$",
              "maxLength": 50
            }
          },
          {
            "in": "query",
            "description": "The number of days to retrieve",
            "name": "days",
            "required": true,
            "schema": {
              "type": "number",
              "enum": [
                1,
                2,
                7,
                20,
                31
              ]
            }
          },
          {
            "in": "query",
            "required": true,
            "description": "The measures to read",
            "name": "measures",
            "schema": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string",
                "enum": [
                  "RELATIVE_HUMIDITY",
                  "RELATIVE_HUMIDITY_MIN",
                  "RELATIVE_HUMIDITY_MAX",
                  "TEMPERATURE",
                  "TEMPERATURE_MIN",
                  "TEMPERATURE_MAX",
                  "WET_TEMPERATURE",
                  "WET_TEMPERATURE_MIN",
                  "WET_TEMPERATURE_MAX",
                  "LEAF_SENSOR_CONDUCTIVITY",
                  "LEAF_SENSOR_CONDUCTIVITY_MIN",
                  "LEAF_SENSOR_CONDUCTIVITY_MAX",
                  "RAIN_FALL",
                  "WIND_SPEED",
                  "WIND_GUST",
                  "WIND_DIRECTION",
                  "MOVE",
                  "LEAF_WETNESS",
                  "LEAF_WETNESS_MEDIUM",
                  "LEAF_WETNESS_HIGH",
                  "RH_AIR_H1",
                  "RH_AIR_H1_MIN",
                  "RH_AIR_H1_MAX",
                  "TEMP_AIR_H1",
                  "TEMP_AIR_H1_MIN",
                  "TEMP_AIR_H1_MAX",
                  "RAIN_TIC",
                  "WIND_MEAN",
                  "WIND_MAX"
                ]
              }
            }
          },
          {
            "in": "query",
            "description": "Wether the calibration of rain falls must be taken in count",
            "name": "withCalibration",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested device's statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceStatistics"
                }
              }
            }
          },
          "404": {
            "description": "User/device does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/devices/{deviceId}/data/daily": {
      "get": {
        "operationId": "getUserDeviceDailyData",
        "summary": "Get a user's device's daily data.",
        "tags": [
          "devices",
          "data",
          "partnerAccess"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The device id",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "description": "The date before which the data starts being retrieved",
            "name": "beforeDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "description": "The number of days to retrieve",
            "name": "days",
            "required": true,
            "schema": {
              "type": "number",
              "enum": [
                7,
                30,
                60,
                90
              ]
            }
          },
          {
            "in": "query",
            "description": "If must include device replacements or not",
            "name": "includeHistory",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "The timezone of the data",
            "name": "timeZone",
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z]+/[a-zA-Z]+$",
              "maxLength": 50
            }
          },
          {
            "in": "query",
            "required": true,
            "description": "The measures to read",
            "name": "measures",
            "schema": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string",
                "enum": [
                  "RELATIVE_HUMIDITY",
                  "RELATIVE_HUMIDITY_MIN",
                  "RELATIVE_HUMIDITY_MAX",
                  "TEMPERATURE",
                  "TEMPERATURE_MIN",
                  "TEMPERATURE_MAX",
                  "WET_TEMPERATURE",
                  "WET_TEMPERATURE_MIN",
                  "WET_TEMPERATURE_MAX",
                  "LEAF_SENSOR_CONDUCTIVITY",
                  "LEAF_SENSOR_CONDUCTIVITY_MIN",
                  "LEAF_SENSOR_CONDUCTIVITY_MAX",
                  "RAIN_FALL",
                  "WIND_SPEED",
                  "WIND_GUST",
                  "WIND_DIRECTION",
                  "MOVE",
                  "LEAF_WETNESS",
                  "LEAF_WETNESS_MEDIUM",
                  "LEAF_WETNESS_HIGH",
                  "RH_AIR_H1",
                  "RH_AIR_H1_MIN",
                  "RH_AIR_H1_MAX",
                  "TEMP_AIR_H1",
                  "TEMP_AIR_H1_MIN",
                  "TEMP_AIR_H1_MAX",
                  "RAIN_TIC",
                  "WIND_MEAN",
                  "WIND_MAX"
                ]
              }
            }
          },
          {
            "in": "query",
            "description": "Wether the calibration of rain falls must be taken in count",
            "name": "withCalibration",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested device's data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceStatistics"
                }
              }
            }
          },
          "404": {
            "description": "User/device does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/devices/{deviceId}/countinuousStatistics": {
      "get": {
        "operationId": "getUserDeviceContinuousStatistics",
        "summary": "Get a user's device's continuous device's statistics.",
        "tags": [
          "devices",
          "data"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The device id",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "description": "The statistics start date",
            "name": "startDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "description": "The statistics end date",
            "name": "endDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "description": "The measures to read",
            "name": "measures",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string",
                "enum": [
                  "RELATIVE_HUMIDITY",
                  "RELATIVE_HUMIDITY_MIN",
                  "RELATIVE_HUMIDITY_MAX",
                  "TEMPERATURE",
                  "TEMPERATURE_MIN",
                  "TEMPERATURE_MAX",
                  "WET_TEMPERATURE",
                  "WET_TEMPERATURE_MIN",
                  "WET_TEMPERATURE_MAX",
                  "LEAF_SENSOR_CONDUCTIVITY",
                  "LEAF_SENSOR_CONDUCTIVITY_MIN",
                  "LEAF_SENSOR_CONDUCTIVITY_MAX",
                  "RAIN_FALL",
                  "WIND_SPEED",
                  "WIND_GUST",
                  "WIND_DIRECTION",
                  "MOVE",
                  "LEAF_WETNESS",
                  "LEAF_WETNESS_MEDIUM",
                  "LEAF_WETNESS_HIGH",
                  "RH_AIR_H1",
                  "RH_AIR_H1_MIN",
                  "RH_AIR_H1_MAX",
                  "TEMP_AIR_H1",
                  "TEMP_AIR_H1_MIN",
                  "TEMP_AIR_H1_MAX",
                  "RAIN_TIC",
                  "WIND_MEAN",
                  "WIND_MAX"
                ]
              }
            }
          },
          {
            "in": "query",
            "description": "Wether you want to get only original data or eventually patched ones to avoid holes.",
            "name": "patched",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "description": "If must include device replacements or not",
            "name": "includeHistory",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "The timezone of the data",
            "name": "timeZone",
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z]+/[a-zA-Z]+$",
              "maxLength": 50
            }
          },
          {
            "in": "query",
            "description": "The interval of data (Accepted value : 31 days for 1h interval, 1 year for 1d interval, 5y for 1w interval)",
            "name": "interval",
            "schema": {
              "type": "string",
              "enum": [
                "15m",
                "1h",
                "1d",
                "1w",
                "1M"
              ]
            }
          },
          {
            "in": "query",
            "description": "Wether the calibration of rain falls must be taken in count",
            "name": "withCalibration",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested device's statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceStatistics"
                }
              }
            }
          },
          "404": {
            "description": "User/device does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/devices/{deviceId}/summaries/{date}": {
      "get": {
        "operationId": "getUserDeviceSummary",
        "summary": "Get a user's device's summary at a given date.",
        "tags": [
          "devices",
          "data"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The device id",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "description": "If must include device replacements or not",
            "name": "includeHistory",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "required": true,
            "description": "The summary date",
            "name": "date",
            "schema": {
              "type": "string",
              "format": "date-time",
              "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z"
            }
          },
          {
            "in": "query",
            "required": true,
            "description": "The measures to read",
            "name": "measures",
            "schema": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string",
                "enum": [
                  "RELATIVE_HUMIDITY",
                  "TEMPERATURE",
                  "WET_TEMPERATURE",
                  "RAIN_FALL",
                  "WIND_SPEED",
                  "WIND_GUST",
                  "WIND_DIRECTION",
                  "MOVE",
                  "LEAF_SENSOR_CONDUCTIVITY",
                  "RH_AIR_H1",
                  "TEMP_AIR_H1",
                  "RAIN_TIC",
                  "WIND_MEAN",
                  "WIND_MAX"
                ]
              }
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested device's summary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceSummaryItem"
                }
              }
            }
          },
          "404": {
            "description": "User/device does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/devices/{deviceId}/forecasts": {
      "get": {
        "operationId": "getUserDeviceForecasts",
        "summary": "Get a user's device's forecasts.",
        "tags": [
          "devices",
          "forecasts"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The device id",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "date",
            "description": "Date of the forecasts",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested device's forecasts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceForecasts"
                }
              }
            }
          },
          "404": {
            "description": "User/device does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/forecasts": {
      "get": {
        "operationId": "getUserForecasts",
        "summary": "Get a user's forecasts.",
        "tags": [
          "forecasts"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "description": "The latitude of the data",
            "name": "latitude",
            "required": true,
            "schema": {
              "minimum": -90,
              "maximum": 90,
              "type": "number",
              "pattern": "^\\-?[0-9]+(\\.[0-9]+)?$"
            }
          },
          {
            "in": "query",
            "description": "The longitude of the data",
            "name": "longitude",
            "required": true,
            "schema": {
              "minimum": -180,
              "maximum": 180,
              "type": "number",
              "pattern": "^\\-?[0-9]+(\\.[0-9]+)?$"
            }
          },
          {
            "in": "query",
            "name": "date",
            "description": "Date of the forecasts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested device's forecasts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceForecasts"
                }
              }
            }
          },
          "404": {
            "description": "User/device does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/statistics": {
      "get": {
        "operationId": "getUserStatistics",
        "summary": "Get a user's statistics for a given location.",
        "tags": [
          "data"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "description": "The latitude of the data",
            "name": "latitude",
            "required": true,
            "schema": {
              "minimum": -90,
              "maximum": 90,
              "type": "number",
              "pattern": "^\\-?[0-9]+(\\.[0-9]+)?$"
            }
          },
          {
            "in": "query",
            "description": "The longitude of the data",
            "name": "longitude",
            "required": true,
            "schema": {
              "minimum": -180,
              "maximum": 180,
              "type": "number",
              "pattern": "^\\-?[0-9]+(\\.[0-9]+)?$"
            }
          },
          {
            "in": "query",
            "description": "The statistics start date",
            "name": "startDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "description": "The statistics end date",
            "name": "endDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "description": "The measures to read",
            "name": "measures",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string",
                "enum": [
                  "RELATIVE_HUMIDITY",
                  "RELATIVE_HUMIDITY_MIN",
                  "RELATIVE_HUMIDITY_MAX",
                  "TEMPERATURE",
                  "TEMPERATURE_MIN",
                  "TEMPERATURE_MAX",
                  "WET_TEMPERATURE",
                  "WET_TEMPERATURE_MIN",
                  "WET_TEMPERATURE_MAX",
                  "LEAF_SENSOR_CONDUCTIVITY",
                  "LEAF_SENSOR_CONDUCTIVITY_MIN",
                  "LEAF_SENSOR_CONDUCTIVITY_MAX",
                  "RAIN_FALL",
                  "WIND_SPEED",
                  "WIND_GUST",
                  "WIND_DIRECTION",
                  "MOVE",
                  "LEAF_WETNESS",
                  "LEAF_WETNESS_MEDIUM",
                  "LEAF_WETNESS_HIGH",
                  "RH_AIR_H1",
                  "RH_AIR_H1_MIN",
                  "RH_AIR_H1_MAX",
                  "TEMP_AIR_H1",
                  "TEMP_AIR_H1_MIN",
                  "TEMP_AIR_H1_MAX",
                  "RAIN_TIC",
                  "WIND_MEAN",
                  "WIND_MAX"
                ]
              }
            }
          },
          {
            "in": "query",
            "description": "The ranges to get the data from",
            "name": "ranges",
            "required": true,
            "schema": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "number",
                "enum": [
                  0.3,
                  3,
                  10,
                  15,
                  40,
                  80
                ]
              }
            }
          },
          {
            "in": "query",
            "description": "Wether you want to get only original data or eventually patched ones to avoid holes.",
            "name": "patched",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "description": "If must include device replacements or not",
            "name": "includeHistory",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "description": "The interval of data (Accepted value : 31 days for 1h interval, 1 year for 1d interval, 5y for 1w interval)",
            "name": "interval",
            "schema": {
              "type": "string",
              "enum": [
                "15m",
                "1h",
                "1d",
                "1w",
                "1M"
              ]
            }
          },
          {
            "in": "query",
            "description": "Wether the calibration of rain falls must be taken in count",
            "name": "withCalibration",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "The timezone of the data",
            "name": "timeZone",
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z]+/[a-zA-Z]+$",
              "maxLength": 50
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested user's statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceStatistics"
                }
              }
            }
          },
          "404": {
            "description": "User does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/data/daily": {
      "get": {
        "operationId": "getUserDailyData",
        "summary": "Get a user's daily data for a given geo location.",
        "tags": [
          "partnerAccess"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "description": "The latitude of the data",
            "name": "latitude",
            "required": true,
            "schema": {
              "minimum": -90,
              "maximum": 90,
              "type": "number",
              "pattern": "^\\-?[0-9]+(\\.[0-9]+)?$"
            }
          },
          {
            "in": "query",
            "description": "The longitude of the data",
            "name": "longitude",
            "required": true,
            "schema": {
              "minimum": -180,
              "maximum": 180,
              "type": "number",
              "pattern": "^\\-?[0-9]+(\\.[0-9]+)?$"
            }
          },
          {
            "in": "query",
            "description": "The date before which the data starts being retrieved",
            "name": "beforeDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "description": "The number of days to retrieve",
            "name": "days",
            "required": true,
            "schema": {
              "type": "number",
              "enum": [
                7,
                30,
                60,
                90
              ]
            }
          },
          {
            "in": "query",
            "description": "If must include device replacements or not",
            "name": "includeHistory",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "description": "The ranges to get the data from",
            "name": "ranges",
            "required": false,
            "schema": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "number",
                "enum": [
                  0.3,
                  3,
                  10,
                  15,
                  40,
                  80
                ]
              }
            }
          },
          {
            "in": "query",
            "required": true,
            "description": "The measures to read",
            "name": "measures",
            "schema": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string",
                "enum": [
                  "RELATIVE_HUMIDITY",
                  "RELATIVE_HUMIDITY_MIN",
                  "RELATIVE_HUMIDITY_MAX",
                  "TEMPERATURE",
                  "TEMPERATURE_MIN",
                  "TEMPERATURE_MAX",
                  "WET_TEMPERATURE",
                  "WET_TEMPERATURE_MIN",
                  "WET_TEMPERATURE_MAX",
                  "LEAF_SENSOR_CONDUCTIVITY",
                  "LEAF_SENSOR_CONDUCTIVITY_MIN",
                  "LEAF_SENSOR_CONDUCTIVITY_MAX",
                  "RAIN_FALL",
                  "WIND_SPEED",
                  "WIND_GUST",
                  "WIND_DIRECTION",
                  "MOVE",
                  "LEAF_WETNESS",
                  "LEAF_WETNESS_MEDIUM",
                  "LEAF_WETNESS_HIGH",
                  "RH_AIR_H1",
                  "RH_AIR_H1_MIN",
                  "RH_AIR_H1_MAX",
                  "TEMP_AIR_H1",
                  "TEMP_AIR_H1_MIN",
                  "TEMP_AIR_H1_MAX",
                  "RAIN_TIC",
                  "WIND_MEAN",
                  "WIND_MAX"
                ]
              }
            }
          },
          {
            "in": "query",
            "description": "Wether the calibration of rain falls must be taken in count",
            "name": "withCalibration",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "The timezone of the data",
            "name": "timeZone",
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z]+/[a-zA-Z]+$",
              "maxLength": 50
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested device's statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceStatistics"
                }
              }
            }
          },
          "404": {
            "description": "User/device does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/data/hourly": {
      "get": {
        "operationId": "getUserHourlyData",
        "summary": "Get a user's hourly data for a given geo location.",
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "description": "The latitude of the data",
            "name": "latitude",
            "required": true,
            "schema": {
              "minimum": -90,
              "maximum": 90,
              "type": "number",
              "pattern": "^\\-?[0-9]+(\\.[0-9]+)?$"
            }
          },
          {
            "in": "query",
            "description": "The longitude of the data",
            "name": "longitude",
            "required": true,
            "schema": {
              "minimum": -180,
              "maximum": 180,
              "type": "number",
              "pattern": "^\\-?[0-9]+(\\.[0-9]+)?$"
            }
          },
          {
            "in": "query",
            "description": "The date before which the data starts being retrieved",
            "name": "beforeDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "description": "If must include device replacements or not",
            "name": "includeHistory",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "description": "The number of days to retrieve",
            "name": "days",
            "required": true,
            "schema": {
              "type": "number",
              "enum": [
                1,
                2,
                7,
                20,
                31
              ]
            }
          },
          {
            "in": "query",
            "description": "The ranges to get the data from",
            "name": "ranges",
            "required": false,
            "schema": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "number",
                "enum": [
                  0.3,
                  3,
                  10,
                  15,
                  40,
                  80
                ]
              }
            }
          },
          {
            "in": "query",
            "required": true,
            "description": "The measures to read",
            "name": "measures",
            "schema": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string",
                "enum": [
                  "RELATIVE_HUMIDITY",
                  "RELATIVE_HUMIDITY_MIN",
                  "RELATIVE_HUMIDITY_MAX",
                  "TEMPERATURE",
                  "TEMPERATURE_MIN",
                  "TEMPERATURE_MAX",
                  "WET_TEMPERATURE",
                  "WET_TEMPERATURE_MIN",
                  "WET_TEMPERATURE_MAX",
                  "LEAF_SENSOR_CONDUCTIVITY",
                  "LEAF_SENSOR_CONDUCTIVITY_MIN",
                  "LEAF_SENSOR_CONDUCTIVITY_MAX",
                  "RAIN_FALL",
                  "WIND_SPEED",
                  "WIND_GUST",
                  "WIND_DIRECTION",
                  "MOVE",
                  "LEAF_WETNESS",
                  "LEAF_WETNESS_MEDIUM",
                  "LEAF_WETNESS_HIGH",
                  "RH_AIR_H1",
                  "RH_AIR_H1_MIN",
                  "RH_AIR_H1_MAX",
                  "TEMP_AIR_H1",
                  "TEMP_AIR_H1_MIN",
                  "TEMP_AIR_H1_MAX",
                  "RAIN_TIC",
                  "WIND_MEAN",
                  "WIND_MAX"
                ]
              }
            }
          },
          {
            "in": "query",
            "description": "Wether the calibration of rain falls must be taken in count",
            "name": "withCalibration",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "The timezone of the data",
            "name": "timeZone",
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z]+/[a-zA-Z]+$",
              "maxLength": 50
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested device's statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceStatistics"
                }
              }
            }
          },
          "404": {
            "description": "User/device does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/preferences": {
      "get": {
        "operationId": "getUserPreferences",
        "summary": "Get a user's preferences.",
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested user preferences",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPreferences"
                }
              }
            }
          },
          "404": {
            "description": "User does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "putUserPreferences",
        "summary": "Update a user's preferences.",
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "The new user preferences",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPreferences"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user preferences were created/updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPreferences"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{organisationId}/operations": {
      "get": {
        "operationId": "getOrganisationOperations",
        "summary": "Get a organisation's operations.",
        "tags": [
          "operations"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The organisation id",
            "name": "organisationId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested organisation's operations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationsItems"
                }
              }
            }
          },
          "404": {
            "description": "Organisation does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postOrganisationOperation",
        "summary": "Create an organisation's operation.",
        "tags": [
          "operations"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The organisation id",
            "name": "organisationId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "The operation to add",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Operation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The newly created organisation's operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationItem"
                }
              }
            }
          },
          "404": {
            "description": "Organisation does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{organisationId}/operations/{operationId}": {
      "get": {
        "operationId": "getOrganisationOperation",
        "summary": "Retrieve an organisation's operation.",
        "tags": [
          "operations"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The organisation id",
            "name": "organisationId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The operation id",
            "name": "operationId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The organisation's operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationItem"
                }
              }
            }
          },
          "404": {
            "description": "Organisation or operation does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "putOrganisationOperation",
        "summary": "Update an organisation's operation.",
        "tags": [
          "operations"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The organisation id",
            "name": "organisationId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The operation id",
            "name": "operationId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "The operation to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Operation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The modified organisation's operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationItem"
                }
              }
            }
          },
          "404": {
            "description": "Organisation does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOrganisationOperation",
        "summary": "Delete an organisation's operation.",
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "tags": [
          "operations"
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The organisation id",
            "name": "organisationId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The operation id",
            "name": "operationId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The organisation's operation does not exist anymore"
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/alerts": {
      "get": {
        "operationId": "getUserAlerts",
        "summary": "Get a user's alerts.",
        "tags": [
          "alerts"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested user's alerts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertsItems"
                }
              }
            }
          },
          "404": {
            "description": "User does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postUserAlert",
        "summary": "Create a user's alert.",
        "tags": [
          "alerts"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "The user's alert",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Alert"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user's alert created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertItem"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/alerts/{alertId}": {
      "put": {
        "operationId": "putUserAlert",
        "summary": "Update a user's alert.",
        "tags": [
          "alerts"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The alert id",
            "name": "alertId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "The user's alert",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Alert"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user's alert updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertItem"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteUserAlert",
        "summary": "Delete a user's alert.",
        "tags": [
          "alerts"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The alert id",
            "name": "alertId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The user's alert were successfully deleted."
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{organisationId}/places": {
      "post": {
        "operationId": "postOrganisationPlace",
        "summary": "Create a new place for an organisation.",
        "tags": [
          "organisations",
          "places"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The organisation id",
            "name": "organisationId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "The necessary contents to create a new place for an organisation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Place"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The place were created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceItem"
                }
              }
            }
          },
          "404": {
            "description": "Organisation does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{organisationId}/places/{placeId}": {
      "put": {
        "operationId": "putOrganisationPlace",
        "summary": "Update a place for an organisation",
        "tags": [
          "organisations",
          "places"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The organisation id",
            "name": "organisationId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The place id",
            "name": "placeId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "The necessary contents to update a place for an organisation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Place"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The place were updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceItem"
                }
              }
            }
          },
          "404": {
            "description": "Place or organisation does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/weather/live": {
      "get": {
        "operationId": "getWeatherLive",
        "summary": "Get last measure (for a specific type) from devices in a given area (1 hour for RAIN_FALL).",
        "tags": [],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "query",
            "description": "The geohash of the data",
            "name": "geohash",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "description": "The measures to read",
            "name": "measureType",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "RELATIVE_HUMIDITY",
                "TEMPERATURE",
                "WIND_SPEED",
                "WIND_GUST",
                "WIND_DIRECTION",
                "RAIN_FALL"
              ]
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of geohashes (small precision) with last measures",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "geohash": {
                            "type": "string"
                          },
                          "lastTemperature": {
                            "type": "number"
                          },
                          "lastRelativeHumidity": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/notifications": {
      "get": {
        "operationId": "getUserNotifications",
        "summary": "Get user's notifications.",
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "type": "number",
              "default": 10,
              "enum": [
                10,
                20,
                50,
                100
              ]
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "cursor",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user's notifications",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationsItems"
                }
              }
            }
          },
          "404": {
            "description": "User does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/notifications/{notificationId}/read": {
      "put": {
        "operationId": "putUserNotificationRead",
        "summary": "Set a user's notification as read.",
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The notification uuid",
            "name": "notificationId",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The user's notification is read"
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteUserNotificationRead",
        "summary": "Set a user's notification as unread.",
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The notification uuid",
            "name": "notificationId",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The user's notification is unread"
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/search/users": {
      "get": {
        "operationId": "getSearchUser",
        "summary": "Search for an user",
        "tags": [
          "search",
          "users"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "query",
            "required": true,
            "description": "Email of the user to search",
            "name": "email",
            "schema": {
              "type": "string",
              "format": "email"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users that match the search",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserItem"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/devices/{deviceId}/calibration/{calibrationName}": {
      "put": {
        "operationId": "putUserDeviceCalibration",
        "summary": "Update a user's device calibration.",
        "tags": [
          "devices"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The device id",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "Calibration to set",
            "name": "calibrationName",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "RAIN_FALL"
              ]
            }
          },
          {
            "in": "query",
            "description": "Ratio to set",
            "name": "ratio",
            "required": true,
            "schema": {
              "type": "number",
              "minimum": 0
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The user's device calibration has been updated"
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/oauth2/authorize": {
      "get": {
        "operationId": "getOAuth2Authorize",
        "summary": "Implements the [Authorization Endpoint](https://tools.ietf.org/html/rfc6749#section-3.1)\n as defined per the OAuth2 RFC.",
        "tags": [
          "oauth2"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "response_type",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "code",
                "token"
              ]
            }
          },
          {
            "in": "query",
            "name": "client_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "redirect_uri",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "in": "query",
            "name": "scope",
            "description": "See https://tools.ietf.org/html/rfc6749#section-3.3",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "state",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Redirects the user to the authorization interface."
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/oauth2/token": {
      "post": {
        "operationId": "postOAuth2Token",
        "summary": "Implements the [Token Endpoint](https://tools.ietf.org/html/rfc6749#section-3.2)\n as defined per the OAuth2 RFC.",
        "tags": [
          "oauth2"
        ],
        "security": [
          {
            "basicAuth": [
              "partner"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AuthorizationCodeTokenRequestBody"
                  },
                  {
                    "$ref": "#/components/schemas/PasswordTokenRequestBody"
                  },
                  {
                    "$ref": "#/components/schemas/ClientCredentialsTokenRequestBody"
                  },
                  {
                    "$ref": "#/components/schemas/RefreshTokenRequestBody"
                  },
                  {
                    "$ref": "#/components/schemas/ModuleTokenRequestBody"
                  },
                  {
                    "$ref": "#/components/schemas/CodeRequestTokenRequestBody"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AuthorizationCodeTokenRequestBody"
                  },
                  {
                    "$ref": "#/components/schemas/PasswordTokenRequestBody"
                  },
                  {
                    "$ref": "#/components/schemas/ClientCredentialsTokenRequestBody"
                  },
                  {
                    "$ref": "#/components/schemas/RefreshTokenRequestBody"
                  },
                  {
                    "$ref": "#/components/schemas/ModuleTokenRequestBody"
                  },
                  {
                    "$ref": "#/components/schemas/CodeRequestTokenRequestBody"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token successfully issued, see https://tools.ietf.org/html/rfc6749#section-5 .",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "access_token",
                    "token_type"
                  ],
                  "properties": {
                    "access_token": {
                      "type": "string"
                    },
                    "token_type": {
                      "description": "See https://tools.ietf.org/html/rfc6749#section-7.1",
                      "type": "string",
                      "enum": [
                        "bearer",
                        "mac"
                      ]
                    },
                    "expires_in": {
                      "description": "The lifetime in seconds of the access token",
                      "type": "number"
                    },
                    "refresh_token": {
                      "description": "See https://tools.ietf.org/html/rfc6749#section-6",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Access token error response, see https://tools.ietf.org/html/rfc6749#section-5.2",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "invalid_request",
                        "invalid_client",
                        "invalid_grant",
                        "unauthorized_client",
                        "unsupported_grant_type",
                        "invalid_scope"
                      ]
                    },
                    "error_description": {
                      "type": "string"
                    },
                    "error_uri": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/devices/liveAggregations": {
      "get": {
        "operationId": "getUserDevicesLiveAggregations",
        "summary": "Allow to run live aggregation queries against a user devices.",
        "tags": [
          "data"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "description": "List of id's of devices",
            "name": "devicesIds",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "pattern": "^[0-9]+$",
                "minimum": 1
              },
              "minItems": 1,
              "uniqueItems": true
            }
          },
          {
            "in": "query",
            "required": true,
            "description": "The aggregations names",
            "name": "aggregations",
            "schema": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string",
                "enum": [
                  "RELATIVE_HUMIDITY_MEAN",
                  "RELATIVE_HUMIDITY_MIN",
                  "RELATIVE_HUMIDITY_MAX",
                  "TEMPERATURE_MEAN",
                  "TEMPERATURE_MIN",
                  "TEMPERATURE_MAX",
                  "WET_TEMPERATURE_MEAN",
                  "WET_TEMPERATURE_MIN",
                  "WET_TEMPERATURE_MAX",
                  "RAIN_FALL_MEAN_SUM",
                  "RAIN_FALL_SUM",
                  "RAIN_FALL_MIN",
                  "RAIN_FALL_MAX",
                  "MOVE_SUM",
                  "INIT_SUM",
                  "WIND_SPEED_MEAN",
                  "WIND_SPEED_MIN",
                  "WIND_SPEED_MAX",
                  "WIND_GUST_MEAN",
                  "WIND_GUST_MIN",
                  "WIND_GUST_MAX",
                  "WIND_DIRECTION_MEAN",
                  "DEGREE_DAY",
                  "COLD_HOURS",
                  "LEAF_SENSOR_CONDUCTIVITY_MIN",
                  "LEAF_SENSOR_CONDUCTIVITY_MAX",
                  "LEAF_SENSOR_CONDUCTIVITY_MEAN",
                  "LEAF_WETNESS",
                  "LEAF_WETNESS_MEDIUM",
                  "LEAF_WETNESS_HIGH"
                ]
              }
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "The params to set",
            "name": "parameters",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "((^| )fiability,withCalibration,base,ceil:[^ ]+){,4}$",
                "example": "base:7"
              }
            }
          },
          {
            "in": "query",
            "required": true,
            "description": "The intervals to retrieve",
            "name": "intervals",
            "schema": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string",
                "enum": [
                  "current",
                  "one_hour",
                  "three_hours",
                  "one_day",
                  "one_week",
                  "today",
                  "yesterday",
                  "this_week",
                  "last_seven_days"
                ]
              }
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "The timezone of the data",
            "name": "timeZone",
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z]+/[a-zA-Z]+$",
              "maxLength": 50
            }
          },
          {
            "in": "query",
            "description": "The status date",
            "name": "date",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "description": "Wether you want to get only original data or eventually patched ones to avoid holes.",
            "name": "patched",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested device's data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceLiveAggregationItems"
                },
                "example": {
                  "items": [
                    209,
                    2219,
                    5149
                  ],
                  "deviceLiveAggregations": {
                    "209": {
                      "RELATIVE_HUMIDITY_MEAN": {},
                      "WIND_SPEED_MEAN": {}
                    },
                    "2219": {
                      "RELATIVE_HUMIDITY_MEAN": {},
                      "WIND_SPEED_MEAN": {
                        "last_hour": 4.333333333333333,
                        "this_week": 10.102888086642599
                      }
                    },
                    "5149": {
                      "RELATIVE_HUMIDITY_MEAN": {
                        "last_hour": 76.55000000000001,
                        "this_week": 85.51822916666667
                      },
                      "WIND_SPEED_MEAN": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "One or more devices are not owned by the user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{organisationId}/users": {
      "get": {
        "operationId": "getOrganisationUsers",
        "summary": "Retrieve all users from an organisation",
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "tags": [
          "organisations"
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The organisation id",
            "name": "organisationId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organisation users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserItems"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/checkouts/{checkoutId}": {
      "get": {
        "operationId": "getCheckout",
        "summary": "Retrieve a checkout",
        "tags": [
          "checkout"
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The checkout id",
            "name": "checkoutId",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
            }
          },
          {
            "name": "locale",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-z]{2}(-[A-Z]{2,3})?$",
              "maxLength": 5
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Checkout retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutItem"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/checkouts": {
      "post": {
        "operationId": "postCheckout",
        "summary": "Create a new checkout (with chargebee)",
        "tags": [
          "checkout"
        ],
        "security": [
          {
            "bearerAuth": [
              "team"
            ]
          },
          {
            "accessTokenAuth": [
              "team"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "query",
            "description": "Generate and send an email",
            "name": "generateEmail",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "The checkout object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Checkout"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Checkout page has been created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutItem"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/checkouts/{checkoutId}/status": {
      "put": {
        "operationId": "putCheckoutStatus",
        "summary": "Change status of a checkout",
        "tags": [
          "checkout"
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The checkout id",
            "name": "checkoutId",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
            }
          },
          {
            "in": "query",
            "description": "New status",
            "name": "status",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "viewed",
                "clicked",
                "ended"
              ]
            }
          },
          {
            "in": "query",
            "description": "New chargebee step in funnel",
            "name": "chargebeeStep",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Checkout status has been updated"
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/checkoutsRessources": {
      "get": {
        "operationId": "getCheckoutRessources",
        "summary": "Retrieve all checkout ressources (plan/addons)",
        "tags": [
          "checkout"
        ],
        "security": [
          {
            "bearerAuth": [
              "team"
            ]
          },
          {
            "accessTokenAuth": [
              "team"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "currency",
            "schema": {
              "type": "string",
              "enum": [
                "EUR",
                "GBP"
              ]
            },
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Checkout ressources (plan/addons)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/checkoutsEstimate": {
      "post": {
        "operationId": "postCheckoutEstimate",
        "summary": "Generates an estimate for the 'create checkout' operation. ",
        "tags": [
          "checkout"
        ],
        "security": [
          {
            "bearerAuth": [
              "team"
            ]
          },
          {
            "accessTokenAuth": [
              "team"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "contents"
                ],
                "properties": {
                  "contents": {
                    "type": "object",
                    "required": [
                      "products",
                      "currency",
                      "delivery"
                    ],
                    "properties": {
                      "currency": {
                        "type": "string",
                        "enum": [
                          "EUR",
                          "GBP"
                        ]
                      },
                      "products": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "id",
                            "quantity"
                          ],
                          "properties": {
                            "id": {
                              "type": "number",
                              "pattern": "^[0-9]+$",
                              "minimum": 1
                            },
                            "quantity": {
                              "type": "number",
                              "minimum": 1
                            }
                          }
                        }
                      },
                      "delivery": {
                        "type": "object",
                        "required": [
                          "type",
                          "zone"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "sending",
                              "onlyTripod"
                            ]
                          },
                          "zone": {
                            "type": "string",
                            "enum": [
                              "France",
                              "Europe"
                            ]
                          }
                        }
                      },
                      "couponCodeId": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The estimate",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ]
      }
    },
    "/hubspot/properties": {
      "get": {
        "operationId": "getHubspotProperties",
        "summary": "Retrieve all tradeshow from hubspot",
        "tags": [
          "checkout",
          "hubspot"
        ],
        "security": [
          {
            "bearerAuth": [
              "team"
            ]
          },
          {
            "accessTokenAuth": [
              "team"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "companies",
                "contacts",
                "deals"
              ]
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hubspot tradeshow",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/devices/{deviceId}/export": {
      "post": {
        "operationId": "postUserDeviceExport",
        "summary": "Create a new export job",
        "tags": [
          "devices",
          "data"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "description": "The device id",
            "name": "deviceId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "emailRecipient",
            "required": false,
            "description": "Recipient email of the export (override default user email)",
            "schema": {
              "type": "string",
              "format": "email"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "The necessary contents to create an export",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "startDate",
                  "endDate",
                  "measures",
                  "interval",
                  "timeZone",
                  "fileFormat",
                  "patched"
                ],
                "properties": {
                  "startDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "measures": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "string",
                      "enum": [
                        "RELATIVE_HUMIDITY",
                        "RELATIVE_HUMIDITY_MIN",
                        "RELATIVE_HUMIDITY_MAX",
                        "TEMPERATURE",
                        "TEMPERATURE_MIN",
                        "TEMPERATURE_MAX",
                        "WET_TEMPERATURE",
                        "WET_TEMPERATURE_MIN",
                        "WET_TEMPERATURE_MAX",
                        "LEAF_SENSOR_CONDUCTIVITY",
                        "LEAF_SENSOR_CONDUCTIVITY_MIN",
                        "LEAF_SENSOR_CONDUCTIVITY_MAX",
                        "RAIN_FALL",
                        "WIND_SPEED",
                        "WIND_GUST",
                        "WIND_DIRECTION",
                        "MOVE",
                        "LEAF_WETNESS",
                        "LEAF_WETNESS_MEDIUM",
                        "LEAF_WETNESS_HIGH",
                        "RH_AIR_H1",
                        "RH_AIR_H1_MIN",
                        "RH_AIR_H1_MAX",
                        "TEMP_AIR_H1",
                        "TEMP_AIR_H1_MIN",
                        "TEMP_AIR_H1_MAX",
                        "RAIN_TIC",
                        "WIND_MEAN",
                        "WIND_MAX"
                      ]
                    }
                  },
                  "interval": {
                    "description": "The interval of data (Accepted value : 31 days for 1h interval, 1 year for 1d interval, 5y for 1w interval)",
                    "type": "string",
                    "enum": [
                      "15m",
                      "1h",
                      "1d",
                      "1w",
                      "1M"
                    ]
                  },
                  "timeZone": {
                    "type": "string",
                    "pattern": "^[a-zA-Z]+/[a-zA-Z]+$",
                    "maxLength": 50
                  },
                  "fileFormat": {
                    "type": "string",
                    "enum": [
                      "csv",
                      "xlsx",
                      "ods"
                    ]
                  },
                  "patched": {
                    "type": "boolean",
                    "description": "Wether you want to get only original data or eventually patched ones to avoid holes."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Export job has been created"
          },
          "404": {
            "description": "User/device does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/guests": {
      "get": {
        "operationId": "getUserGuests",
        "summary": "Get a user's guests.",
        "tags": [
          "users",
          "partnerAccess"
        ],
        "deprecated": true,
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested user's guests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuestItems"
                }
              }
            }
          },
          "404": {
            "description": "User does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postUserGuest",
        "summary": "Create a user's guest.",
        "tags": [
          "users"
        ],
        "deprecated": true,
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "description": "The organisation id to add the collaborator to",
            "name": "organisationIdTarget",
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "The user's guest",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Guest"
                  },
                  {
                    "$ref": "#/components/schemas/GuestInvitation"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created user's guest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuestItem"
                }
              }
            }
          },
          "404": {
            "description": "User does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/guests/{guestId}": {
      "put": {
        "operationId": "putUserGuest",
        "summary": "Update a user's guest.",
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "deprecated": true,
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "required": true,
            "description": "The guest id",
            "name": "guestId",
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "The user's guest",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Guest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user's guest updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuestItem"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteUserGuest",
        "summary": "Delete a user's guest.",
        "tags": [
          "users"
        ],
        "deprecated": true,
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "description": "The organisation id to remove the collaborator to",
            "name": "organisationIdTarget",
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "required": true,
            "description": "The guest id",
            "name": "guestId",
            "schema": {
              "pattern": "^[0-9]+$",
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The user's guest were successfully deleted."
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/collaborators": {
      "get": {
        "operationId": "getUserCollaborators",
        "summary": "Get a user's collaborators.",
        "tags": [
          "users",
          "partnerAccess"
        ],
        "deprecated": true,
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested user's collaborators",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollaboratorItems"
                }
              }
            }
          },
          "404": {
            "description": "User does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postUserCollaborator",
        "summary": "Create a user's collaborator.",
        "tags": [
          "users"
        ],
        "deprecated": true,
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "description": "The organisation id to add the collaborator to",
            "name": "organisationIdTarget",
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "The user's collaborator",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Collaborator"
                  },
                  {
                    "$ref": "#/components/schemas/CollaboratorInvitation"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created user's collaborator",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollaboratorItem"
                }
              }
            }
          },
          "404": {
            "description": "User does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteUserCollaborator",
        "summary": "Delete a user's collaborator.",
        "tags": [
          "users"
        ],
        "deprecated": true,
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "description": "The organisation id to remove the collaborator to",
            "name": "organisationIdTarget",
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "required": true,
            "description": "The collaborator id",
            "name": "collaboratorId",
            "schema": {
              "pattern": "^[0-9]+$",
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The user's collaborator were successfully deleted."
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/collaborators/{collaboratorId}": {
      "put": {
        "operationId": "putUserCollaborator",
        "summary": "Update a user's collaborator.",
        "tags": [
          "users"
        ],
        "deprecated": true,
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The user id",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "required": true,
            "description": "The collaborator id",
            "name": "collaboratorId",
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "The user's collaborator",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Collaborator"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user's collaborator updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollaboratorItem"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{organisationId}/membersMigration": {
      "post": {
        "operationId": "postOrganisationMembersMigration",
        "summary": "Endpoint for migration. Don't use it or use with caution !",
        "tags": [
          "organisations"
        ],
        "deprecated": true,
        "security": [
          {
            "bearerAuth": [
              "user"
            ]
          },
          {
            "accessTokenAuth": [
              "user"
            ]
          },
          {
            "fakeAuth": [
              "admin"
            ]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The organisation id",
            "name": "organisationId",
            "required": true,
            "schema": {
              "type": "number",
              "pattern": "^[0-9]+$",
              "minimum": 1
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization with Bearer mecanism",
            "schema": {
              "type": "string",
              "pattern": "^(B|b)earer (.+)$"
            }
          },
          {
            "in": "query",
            "name": "access_token",
            "description": "Token provided through query parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ],
        "requestBody": {
          "description": "The necessary contents to migrate users",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "collaborators",
                  "guests"
                ],
                "properties": {
                  "collaborators": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                      "type": "number",
                      "pattern": "^[0-9]+$"
                    }
                  },
                  "guests": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                      "type": "number",
                      "pattern": "^[0-9]+$"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Members were migrated"
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/organisations": {
      "post": {
        "operationId": "postOrganisationDeprecated",
        "summary": "Creates a new organisation. Highly Deprecated, will be moved soon.",
        "tags": [],
        "deprecated": true,
        "requestBody": {
          "description": "The necessary contents to create a new organisation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "firstname",
                  "lastname",
                  "password",
                  "email",
                  "phone",
                  "address",
                  "zipcode",
                  "city",
                  "country",
                  "company",
                  "locale"
                ],
                "properties": {
                  "firstname": {
                    "type": "string"
                  },
                  "lastname": {
                    "type": "string"
                  },
                  "birthDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "password": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "locale": {
                    "type": "string",
                    "pattern": "^[a-z]{2}(-[A-Z]{2,3})?$",
                    "maxLength": 5
                  },
                  "timeZone": {
                    "type": "string",
                    "pattern": "^[a-zA-Z]+/[a-zA-Z]+$",
                    "maxLength": 50
                  },
                  "phone": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "zipcode": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "company": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "area": {
                        "type": "number"
                      },
                      "crops": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "irrigation": {
                        "type": "boolean"
                      }
                    }
                  },
                  "callbackPath": {
                    "type": "string"
                  },
                  "verifyToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The organisation were created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              }
            }
          },
          "default": {
            "description": "API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "X-API-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-SDK-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          },
          {
            "name": "X-APP-Version",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
            }
          }
        ]
      }
    }
  }
}
